---
openapi: 3.0.0
info:
  title: Assembly API
  description: Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.
  contact:
    url: http://docs.assemblypayments.com/
    email: support@assemblypayments.com
  version: "2.0"
servers:
- url: https://test.api.promisepay.com
  description: Pre-live environment
- url: https://secure.api.promisepay.com
  description: Production environment
- url: https://au-0000.sandbox.auth.assemblypay.com
  description: Pre-Live (Sandbox) Auth issuing server and API
- url: https://au-0000.auth.assemblypay.com
  description: Production Auth issuing server and API
- url: https://virtserver.swaggerhub.com/AssemblyPlatforms/assembly-api/2.0
  description: SwaggerHub API Auto Mocking
security:
- basicAuth: []
- oAuth2ClientCredentials: []
paths:
  /tokens:
    post:
      tags:
      - Authentication
      summary: Token
      description: Exchange client application credentials for a bearer token. Please ensure to call the auth issuing server as described at https://developer.assemblypayments.com/reference#authentication
      operationId: token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokens_request_body'
        required: true
      responses:
        "200":
          description: Response body contains an access token with lifetime in seconds and usage information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokens_response'
              examples:
                response:
                  value:
                    access_token: ey...J9.ey...n0.Iu...7g
                    expires_in: 3600
                    token_type: Bearer
        "400":
          description: Request not parseable, grant type invalid or properties missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                response:
                  value:
                    error: bad request
        "401":
          description: We can't resolve the supplied credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                response:
                  value:
                    error: invalid credentials
        "422":
          description: One or more property values are unprocessable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                response:
                  value:
                    error: invalid client details
        "500":
          description: We have a problem, which we have logged. Please try again later and if it still doesn't work, contact us.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                response:
                  value:
                    error: something went wrong
  /addresses/{id}:
    get:
      tags:
      - Addresses
      summary: Show Address
      description: Show details of a specific Address using a given address `:id`.
      operationId: showAddress
      parameters:
      - name: id
        in: path
        description: Address ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address'
              examples:
                response:
                  value:
                    addresses:
                      addressline1: 100 Main Street
                      addressline2: office building no 3
                      postcode: 2000
                      city: Sydney
                      state: NSW
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      country: Australia
                      links:
                        self: /addresses/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
  /bank_accounts/{id}:
    get:
      tags:
      - Bank Accounts
      summary: Show Bank Account
      description: Show details of a specific **Bank Account** using a given `:id`.
      operationId: showBankAccount
      parameters:
      - name: id
        in: path
        description: Bank account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      created_at: 2020-04-27T20:28:22.378Z
                      updated_at: 2020-04-27T20:28:22.378Z
                      verification_status: not_verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                        direct_debit_authority_status: approved
                      links:
                        self: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
                        direct_debit_authorities: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/direct_debit_authorities
    delete:
      tags:
      - Bank Accounts
      summary: Redact Bank Account
      description: |
        Redact a **Bank Account** using a given `:id`. Redacted **Bank Accounts** can no longer be used as a funding source or a Disbursement destination.
      operationId: redactBankAccount
      parameters:
      - name: id
        in: path
        description: Bank account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account_deletion'
              examples:
                response:
                  value:
                    bank_account: Successfully redacted
  /bank_accounts/{id}/penny_send:
    patch:
      tags:
      - Bank Accounts
      summary: Send Penny Amount
      description: |
        When penny verification is enabled, this API call sends two penny transactions to the specified bank account for verification. **Note**: This API call is not required when your platform has automatic penny verification enabled, as this is instead done by the system. Penny credit verification is only supported for US platforms.
      operationId: sendPennyAmount
      parameters:
      - name: id
        in: path
        description: Bank account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      created_at: 2020-04-27T20:28:22.378Z
                      updated_at: 2020-04-27T20:28:22.378Z
                      verification_status: verifying
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                        direct_debit_authority_status: approved
                      links:
                        self: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
                        direct_debit_authorities: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/direct_debit_authorities
  /bank_accounts:
    post:
      tags:
      - Bank Accounts
      summary: Create Bank Account
      description: |
        Create a **Bank Account** to be used as either a funding source or a Disbursement destination. Store the returned `:id` and use it for a `make_payment` **Item Action** call. The `:id` is also referred to as a `token` when involving **Bank Accounts**.
      operationId: createBankAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_account_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      verification_status: not_verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                        direct_debit_authority_status: approved
                      links:
                        self: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
                        direct_debit_authorities: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/direct_debit_authorities
  /bank_accounts/{id}/penny_verify:
    patch:
      tags:
      - Bank Accounts
      summary: Verify Penny Amount
      description: |
        When penny verification is enabled, this API call verifies the two penny transactions that were sent to a specified bank account using **Send Penny Amount**. **Note**: This API call requires you to provide a front-end interface to your end-users into which they can input the penny amounts required for a successful verification. Your front-end interface should then pass the information into this API call. Penny credit verification is only supported for US platforms.
      operationId: verifyPennyAmount
      parameters:
      - name: id
        in: path
        description: Bank account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/penny_verify_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      verification_status: verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                        direct_debit_authority_status: approved
                      links:
                        self: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
                        direct_debit_authorities: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/direct_debit_authorities
  /bank_accounts/{id}/users:
    get:
      tags:
      - Bank Accounts
      summary: Show Bank Account User
      description: Show the **User** the **Bank Account** is associated with using a given `:id`.
      operationId: showBankAccountUser
      parameters:
      - name: id
        in: path
        description: Bank account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /bank_accounts/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /tools/routing_number:
    get:
      tags:
      - Bank Accounts
      summary: Validate Routing Number
      description: Validate a US bank routing number before creating an account. This can be used to provide on-demand verification, and further information of the bank information a User is providing.
      operationId: validateRoutingNumber
      parameters:
      - name: routing_number
        in: query
        description: Bank account routing number
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: "122235821"
        example: "122235821"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_routing_number'
              examples:
                response:
                  value:
                    routing_number:
                      routing_number: "122235821"
                      customer_name: US BANK NA
                      address: EP-MN-WN1A
                      city: ST. PAUL
                      state_code: MN
                      zip: "55107"
                      zip_extension: "1419"
                      phone_area_code: "800"
                      phone_prefix: "937"
                      phone_suffix: "631"
  /bpay_accounts/{id}:
    get:
      tags:
      - BPay Accounts
      summary: Show BPay Account
      description: Show details of a specific **BPay Account** using a given `:id`.
      operationId: showBPayAccount
      parameters:
      - name: id
        in: path
        description: BPay account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bpay_account'
              examples:
                response:
                  value:
                    bpay_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      verification_status: not_verified
                      currency: AUD
                      bpay_details:
                        account_name: My Water Bill Company
                        biller_code: 123456
                        biller_name: ABC Water
                        crn: 987654321
                      links:
                        self: /bpay_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bpay_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
    delete:
      tags:
      - BPay Accounts
      summary: Redact BPay Account (Future Feature)
      description: |
        Redact a **BPay Account** using a given `:id`. Redacted **BPay Accounts** can no longer be used as a Disbursement destination.
      operationId: redactBPayAccount
      parameters:
      - name: id
        in: path
        description: BPay account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bpay_account_deletion'
              examples:
                response:
                  value:
                    bpay_account: Successfully redacted
  /bpay_accounts:
    post:
      tags:
      - BPay Accounts
      summary: Create BPay Account
      description: |
        Create a **BPay Account** to be used as a Disbursement destination.
      operationId: createBPayAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bpay_account_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bpay_account'
              examples:
                response:
                  value:
                    bpay_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      active: true
                      verification_status: not_verified
                      currency: AUD
                      bpay_details:
                        account_name: My Water Bill Company
                        biller_code: 123456
                        biller_name: ABC Water
                        crn: 987654321
                      links:
                        self: /bpay_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bpay_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
  /bpay_accounts/{id}/users:
    get:
      tags:
      - BPay Accounts
      summary: Show BPay Account User
      description: Show the **User** the **BPay Account** is associated with using a given `:id`.
      operationId: showBPayAccountUser
      parameters:
      - name: id
        in: path
        description: BPay account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /bpay_accounts/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bpay_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bpay_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /wallet_accounts/{id}/bill_payment:
    post:
      tags:
      - Wallet Accounts
      summary: Pay a Bill
      description: Pay a bill by withdrawing funds from a **Wallet Account** to a specified bpay account.
      operationId: billPayment
      parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 8a31ebfa-421b-4cbb-9241-632f71b3778a
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill_payment_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_disbursement'
              examples:
                response:
                  value:
                    disbursements:
                      id: 8a31ebfa-421b-4cbb-9241-632f71b3778a
                      amount: 173
                      currency: AUD
                      created_at: 2020-05-09T07:09:03.383Z
                      updated_at: 2020-05-09T07:09:04.585Z
                      state: pending
                      to: BPay Account
                      account_name: My Water Company
                      biller_name: ABC Water
                      biller_code: 123456
                      crn: 9.87654321E8
                      links:
                        transactions: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/transactions
                        wallet_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/wallet_accounts
                        bank_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/bank_accounts
                        bpay_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/bpay_accounts
                        paypal_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/paypal_accounts
                        items: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/items
                        users: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/users
  /users/{id}/bpay_accounts:
    get:
      tags:
      - Users
      summary: List User's BPay Accounts
      description: List the **BPay Accounts** the **User** is associated with using a given `:id`.
      operationId: listUserBPayAccounts
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_bpay_accounts'
              examples:
                response:
                  value:
                    bpay_accounts:
                    - id: b0980390-ac5b-0138-8b2e-0a58a9feac03
                      active: true
                      created_at: 2020-07-20T02:07:33.583+0000
                      updated_at: 2020-07-20T02:07:33.583+0000
                      bpay_details:
                        biller_name: APIBCD AV4
                        account_name: Test Biller
                        biller_code: "93815"
                        crn: "613295205"
                      currency: AUD
                      verification_status: verified
                      links:
                        self: /bpay_accounts/b0980390-ac5b-0138-8b2e-0a58a9feac03
                        users: /bpay_accounts/b0980390-ac5b-0138-8b2e-0a58a9feac03/users
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /users/901d8cd0-6af3-0138-967d-0a58a9feac04/bpay_accounts
  /callbacks/{id}:
    get:
      tags:
      - Callbacks
      summary: Show Callback
      description: Show details of a specific **Callback** using a given `:id`.
      operationId: showCallback
      parameters:
      - name: id
        in: path
        description: Callback ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_callback'
              examples:
                response:
                  value:
                    callbacks:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      description": Users Callback
                      url: https://httpbin.org/post
                      object_type: users
                      enabled: true
                      created_at: 2019-03-29T06:12:57.686Z
                      updated_at: 2019-03-29T06:12:57.686Z
                      marketplace_id: 8a840e7b-20e2-4a05-86b9-60b62bc6c21c
                      links:
                        self: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970
                        responses: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970/responses
    delete:
      tags:
      - Callbacks
      summary: Delete Callback
      description: Delete an existing Callback using a given `:id`.
      operationId: deleteCallback
      parameters:
      - name: id
        in: path
        description: Callback ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/callback_deletion'
              examples:
                response:
                  value:
                    callbacks: Successfully redacted
    patch:
      tags:
      - Callbacks
      summary: Update Callback
      description: |
        Update an existing **Callback** using a given `:id`. You can change the `URL`, the `object_type` and whether the **Callback** is `enabled` or `disabled`.
      operationId: updateCallback
      parameters:
      - name: id
        in: path
        description: Callback ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callback_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_callback'
              examples:
                response:
                  value:
                    callbacks:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      description": Users Callback
                      url: https://httpbin.org/post
                      object_type: users
                      enabled: true
                      created_at: 2019-03-29T06:12:57.686Z
                      updated_at: 2019-03-29T06:12:57.686Z
                      links:
                        self: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970
                        responses: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970/responses
  /callbacks/{id}/responses:
    get:
      tags:
      - Callbacks
      summary: List Callback Responses
      description: Retrieve an ordered and paginated list of the responses garnered from a callback using a given `:id`.
      operationId: listCallbackResponse
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: Callback ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_callback_responses'
              examples:
                response:
                  value:
                    callback_responses:
                    - id: f96ca75b-4a37-4e37-a7e9-c121a0fd1142
                      created_at: 2019-04-01T01:55:30.345Z
                      url: https://httpbin.org/post
                      payload:
                        disbursements:
                          id: 42f2ca8f-deca-4d41-9982-26376a2d60ce
                          amount: 841698
                          currency: AUD
                          batch_id: 111
                          created_at: 2019-03-29T06:14:43.991Z
                          updated_at: 2019-04-01T01:54:58.752Z
                          state: batched
                          to: Bank Account
                          bank_name: Test Bank Assembly
                          bank_account_name: Assembly seller36550573
                          bank_account_number: XXX229
                          bank_routing_number: XXXXX9
                          npp_payout_state: trying
                          links:
                            transactions: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/transactions
                            wallet_accounts: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/wallet_accounts
                            bank_accounts: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/bank_accounts
                            paypal_accounts: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/paypal_accounts
                            items: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/items
                            users: /disbursements/42f2ca8f-deca-4d41-9982-26376a2d60ce/users
                      response:
                        error: OK
                      response_code: 200
                    - id: 0c9cbb28-0b98-4560-9c81-7a4ea6cde95b
                      created_at: 2019-04-01T01:55:25.276Z
                      url: https://httpbin.org/post
                      payload:
                        disbursements:
                          id: d98133ca-9a2e-4322-9610-62b2faf78476
                          amount: 577954
                          currency: AUD
                          batch_id: 111
                          created_at: 2019-03-29T06:14:07.045Z
                          updated_at: 2019-04-01T01:54:58.448Z
                          state: batched
                          to: Bank Account
                          bank_name: Test Bank Assembly
                          bank_account_name: Assembly seller36550536
                          bank_account_number: XXX229
                          bank_routing_number: XXXXX3
                          npp_payout_state: trying
                          links:
                            transactions: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/transactions
                            wallet_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/wallet_accounts
                            bank_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/bank_accounts
                            paypal_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/paypal_accounts
                            items: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/items
                            users: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/users
                      response:
                        error: OK
                      response_code: 200
                      meta:
                        limit: 2
                        offset: 0
                        total: 10
                      links:
                        self: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970/responses?limit=2
                        callbacks: /callbacks
  /callbacks/{callback_id}/responses/{id}:
    get:
      tags:
      - Callbacks
      summary: Show Callback Response
      description: Show details of a specific **Callback** response using a given `:id`.
      operationId: showCallbackResponse
      parameters:
      - name: callback_id
        in: path
        description: Callback ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 088e4cf1-2508-4bd4-97ab-a78e4e869970
        example: 088e4cf1-2508-4bd4-97ab-a78e4e869970
      - name: id
        in: path
        description: Callback response ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 0c9cbb28-0b98-4560-9c81-7a4ea6cde95b
        example: 0c9cbb28-0b98-4560-9c81-7a4ea6cde95b
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_callback_response'
              examples:
                response:
                  value:
                    callback_responses:
                      id: 0c9cbb28-0b98-4560-9c81-7a4ea6cde95b
                      created_at: 2019-04-01T01:55:25.276Z
                      url: https://httpbin.org/post
                      payload:
                        disbursements:
                          id: d98133ca-9a2e-4322-9610-62b2faf78476
                          amount: 577954
                          currency: AUD
                          batch_id: 111
                          created_at: 2019-03-29T06:14:07.045Z
                          updated_at: 2019-04-01T01:54:58.448Z
                          state: batched
                          to: Bank Account
                          bank_name: Test Bank Assembly
                          bank_account_name: Assembly seller36550536
                          bank_account_number: XXX229
                          bank_routing_number: XXXXX3
                          npp_payout_state: trying
                          links:
                            transactions: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/transactions
                            wallet_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/wallet_accounts
                            bank_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/bank_accounts
                            paypal_accounts: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/paypal_accounts
                            items: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/items
                            users: /disbursements/d98133ca-9a2e-4322-9610-62b2faf78476/users
                      response:
                        error: OK
                      response_code: 200
                      links:
                        self: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970/responses/0c9cbb28-0b98-4560-9c81-7a4ea6cde95b
                        responses: /callbacks/088e4cf1-2508-4bd4-97ab-a78e4e869970/responses
  /callbacks:
    get:
      tags:
      - Callbacks
      summary: List Callbacks
      description: Retrieve an ordered and paginated list of all created **Callbacks**.
      operationId: listCallbacks
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: filter
        in: query
        description: Narrow down records to relevant character string
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/callbacks'
              examples:
                response:
                  value:
                    callbacks:
                    - id: a31a9b45-d5b3-401e-b7ce-0c23edd48b06
                      created_at: 2020-04-16T02:34:45.879Z
                      updated_at: 2020-04-16T02:34:45.879Z
                      description: Callbacks for items
                      url: https://httpbin.org/post
                      object_type: disbursements
                      enabled: true
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /callbacks
    post:
      tags:
      - Callbacks
      summary: Create Callback
      description: Create a **Callback** to notify you at the `URL` when the `object_type` changes
      operationId: createCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callback_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_callback'
              examples:
                response:
                  value:
                    callbacks:
                      id: 30403493-7249-433a-83ce-555388f75c01
                      description: testy
                      url: https://httpbin.org
                      object_type: batch_transactions
                      enabled: true
                      created_at: 2020-04-29T13:02:22.981Z
                      updated_at: 2020-04-29T13:02:22.981Z
                      links:
                        self: /callbacks?description=testy&url=https://httpbin.org&object_type=batch_transactions&enabled=true
                        responses: /callbacks/30403493-7249-433a-83ce-555388f75c01/responses
  /card_accounts:
    post:
      tags:
      - Card Accounts
      summary: Create Card Account
      description: |
        Create a Credit **Card Account** to be used as a funding source. Store the returned `:id` and use it for a `make_payment` **Item Action** call. The `:id` is also referred to as a **token** when involving Credit Cards.
      operationId: createCardAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_account_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account'
              examples:
                response:
                  value:
                    card_accounts:
                      active: true
                      created_at: 2020-04-29T23:00:01.369Z
                      updated_at: 2020-04-29T23:00:01.369Z
                      id: 14160da0-6c9b-0138-e2ca-0a58a9feac03
                      cvv_verified: true
                      currency: AUD
                      links:
                        self: /card_accounts/14160da0-6c9b-0138-e2ca-0a58a9feac03
                        users: /card_accounts/14160da0-6c9b-0138-e2ca-0a58a9feac03/users
  /card_accounts/{id}/users:
    get:
      tags:
      - Card Accounts
      summary: Show Card Account User
      description: Show the **User** the Credit **Card Account** is associated with using a given `:id`.
      operationId: showCardAccountUser
      parameters:
      - name: id
        in: path
        description: Card account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /card_accounts/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /card_accounts/{id}/verify:
    patch:
      tags:
      - Card Accounts
      summary: Verify Card
      description: Where pre-authorization is enabled on a platform, verifies a **Card Account** when a **Card Account** is successfully verified, its verification status is `verified`.
      operationId: verifyCard
      parameters:
      - name: id
        in: path
        description: Card account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_account_verify_requestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account'
              examples:
                response:
                  value:
                    card_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      verification_status: verified
                      currency: AUD
                      cvv_verified: true
                      created_at: 2019-04-08T01:40:15.038Z
                      updated_at: 2019-04-08T01:40:15.038Z
                      card:
                        type: visa
                        full_name: Jane Doe
                        number: XXXX-XXXX-XXXX-1111
                        expiry_month: "10"
                        expiry_year: "2020"
                      links:
                        self: /card_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /card_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
  /card_accounts/{id}:
    get:
      tags:
      - Card Accounts
      summary: Show Card Account
      description: |
        Show details of a specific Credit **Card Account** using a given `:id`. You can toggle the card account number display to show the first 6 digits in addition to the last 4 digits. Contact Assembly if you want to toggle the card account display.
      operationId: showCardAccount
      parameters:
      - name: id
        in: path
        description: Card account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account'
              examples:
                response:
                  value:
                    card_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      verification_status: verified
                      currency: AUD
                      cvv_verified: true
                      created_at: 2019-04-08T01:40:15.038Z
                      updated_at: 2019-04-08T01:40:15.038Z
                      card:
                        type: visa
                        full_name: Jane Doe
                        number: XXXX-XXXX-XXXX-1111
                        expiry_month: "10"
                        expiry_year: "2020"
                      links:
                        self: /card_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /card_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
    delete:
      tags:
      - Card Accounts
      summary: Redact Card Account
      description: |
        Redact a Credit **Card Account** using a given `:id`. Redacted Credit **Card Accounts** can no longer be used as a funding source.
      operationId: redactCardAccount
      parameters:
      - name: id
        in: path
        description: ID of the card account to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account_deletion'
              examples:
                response:
                  value:
                    card_account: Successfully redacted
  /companies:
    get:
      tags:
      - Companies
      summary: List Companies
      description: Retrieve an ordered and paginated list of existing **Companies**.
      operationId: listCompanies
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple_companies'
              examples:
                response:
                  value:
                    companies:
                    - id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      name: Dunder Mifflin
                      legal_name: DunderCo
                      related:
                        address: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      links:
                        self: /companies/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                    - id: 5ba45160-4c56-0137-55f0-0242ac110002
                      name: ABC
                      legal_name: ABC Companys
                      related:
                        address: 5ba44070-4c56-0137-ac73-0242ac110002
                      links:
                        self: /companies/5ba45160-4c56-0137-55f0-0242ac110002
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /companies
    post:
      tags:
      - Companies
      summary: Create Company
      description: |
        Create a **Company** associated with the **User** using a given `user_id`. **Note**: Some parameters are required for user verification. See our guide on [Onboarding a Payout User/Seller](https://developer.assemblypayments.com/docs/onboarding-a-pay-out-user) for more information.
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_company'
              examples:
                response:
                  value:
                    companies:
                      legal_name: ABC Pty Ltd
                      name: ABC
                      tax_number: "123456789"
                      id: 0386b4e0-6f59-0138-567d-0a58a9feac03
                      related:
                        address: 0386a290-6f59-0138-2530-0a58a9feac03
                        users: 7443ead0-6af2-0138-1a92-0a58a9feac04
                      links:
                        self: /companies?name=ABC&legal_name=ABC%20Pty%20Ltd&tax_number=123456789&charge_tax&address_line1=Collins&address_line2&city=Melbourne&state=VIC&zip=3000&country=AUS&user_id=buyer-70729325
  /companies/{id}:
    get:
      tags:
      - Companies
      summary: Show Company
      description: Show details of a specific **Company** using a given `:id`.
      operationId: showCompany
      parameters:
      - name: id
        in: path
        description: Company ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_company'
              examples:
                response:
                  value:
                    companies:
                    - id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      name: Dunder Mifflin
                      legal_name: DunderCo
                      related:
                        address: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      links:
                        self: /companies/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
    patch:
      tags:
      - Companies
      summary: Update Company
      description: Update an existing **Company** attributes using a given `:id`.
      operationId: updateCompany
      parameters:
      - name: id
        in: path
        description: Company ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_company'
              examples:
                response:
                  value:
                    companies:
                    - id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      name: Dunder Mifflin
                      legal_name: DunderCo
                      related:
                        address: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      links:
                        self: /companies/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
  /direct_debit_authorities:
    get:
      tags:
      - Direct Debit Authorities
      summary: List Direct Debit Authorities
      description: Retrieve an ordered and paginated list of existing **Direct Debit Authorities**.
      operationId: listDirectDebitAuthorities
      parameters:
      - name: account_id
        in: query
        description: Bank account ID
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: a2463ce3-229b-4da1-8a07-93366c1092c9
        example: a2463ce3-229b-4da1-8a07-93366c1092c9
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_direct_debit_authorities'
              examples:
                response:
                  value:
                    direct_debit_authorities:
                    - id: a2463ce3-229b-4da1-8a07-93366c1092c9
                      created_at: 2020-05-03T11:03:30.833Z
                      updated_at: 2020-05-03T11:03:30.833Z
                      amount: 100
                      bank_bsb: 083001,803320
                      debit_user_id: 481561,342203
                      state: approved
                      related:
                        bank_accounts: 7fac6c60-6f5b-0138-eb9a-0a58a9feac03
                      links:
                        self: /direct_debit_authorities/a2463ce3-229b-4da1-8a07-93366c1092c9
    post:
      tags:
      - Direct Debit Authorities
      summary: Create Direct Debit Authority
      description: |
        Create a **Direct Debit Authority** associated with a **Bank Account**. The **Direct Debit Authority** is required to use a **Bank Account** as a funding source (Direct Debit/ACH).
      operationId: createDirectDebitAuthority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_debit_authority_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_direct_debit_authority'
              examples:
                response:
                  value:
                    direct_debit_authorities:
                      id: a2463ce3-229b-4da1-8a07-93366c1092c9
                      created_at: 2020-05-03T11:03:30.833Z
                      updated_at: 2020-05-03T11:03:30.833Z
                      amount: 100
                      bank_bsb: 083001,803320
                      debit_user_id: 481561,342203
                      state: approved
                      related:
                        bank_accounts: 7fac6c60-6f5b-0138-eb9a-0a58a9feac03
                      links:
                        self: /direct_debit_authorities/a2463ce3-229b-4da1-8a07-93366c1092c9
  /direct_debit_authorities/{id}:
    get:
      tags:
      - Direct Debit Authorities
      summary: Show Direct Debit Authority
      description: Show details of a specific **Direct Debit Authority** using a given `:id`.
      operationId: showDirectDebitAuthority
      parameters:
      - name: id
        in: path
        description: Direct debit authority ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 57abfd04-2ccb-4d55-8bd3-6f1a24a6ea47
        example: 57abfd04-2ccb-4d55-8bd3-6f1a24a6ea47
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_direct_debit_authority'
              examples:
                response:
                  value:
                    direct_debit_authorities:
                      id: 57abfd04-2ccb-4d55-8bd3-6f1a24a6ea47
                      created_at: 2016-04-18T05:21:27.339Z
                      updated_at: 2016-04-18T05:21:27.339Z
                      amount: 12345
                      bank_bsb: "123456"
                      debit_user_id: "481561"
                      state: approved
                      related:
                        bank_accounts: ffe73bc7-0577-4e8c-8591-05b1583da5d1
                      links:
                        self: /direct_debit_authorities/57abfd04-2ccb-4d55-8bd3-6f1a24a6ea47
  /fees:
    get:
      tags:
      - Fees
      summary: List Fees
      description: Retrieve an ordered and paginated list of existing **Fees**.
      operationId: listFees
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fees'
              examples:
                response:
                  value:
                    fees:
                    - id: 59826643-35d7-441f-bf44-978df61a80ae
                      created_at: 2020-05-03T11:32:01.092Z
                      updated_at: 2020-05-03T11:32:01.092Z
                      name: marketplace-bpay
                      fee_type_id: 1
                      amount: 150
                      to: buyer
                      links:
                        self: /fees/59826643-35d7-441f-bf44-978df61a80ae
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /fees
    post:
      tags:
      - Fees
      summary: Create fee
      description: |
        Create a **Fee** to be associated with an **Item**. **Fees** will add or subtract from the **Item** amount based on the **User**, payment type or Disbursement account type. **Fees** can be `Fixed` or `Percentage` based. **Fees** can be capped, have a maximum amount and/or a minimum amount.
      operationId: createFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_fee'
              examples:
                response:
                  value:
                    fees:
                      id: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
                      created_at: 2016-04-18T05:21:27.339Z
                      updated_at: 2016-04-18T05:21:27.339Z
                      name: Seller Success Fee
                      fee_type_id: 2
                      amount: 200
                      to: seller
                      links:
                        self: /fees/1e5e372a-df3a-4f77-af2f-ec294b1715ce
  /fees/{id}:
    get:
      tags:
      - Fees
      summary: Show Fee
      description: |
        Show details of a specific **Fee** using a given `:id`. If the `item_amount` is specified, the response also shows the `calculated_fee` based on a percentage of the `item_amount`.
      operationId: showFee
      parameters:
      - name: id
        in: path
        description: Fee ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
        example: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
      - name: item_amount
        in: query
        description: The cost of the item in cents on which the calculated Fee is based
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: "200"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_fee'
              examples:
                response:
                  value:
                    fees:
                      id: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
                      created_at: 2016-04-18T05:21:27.339Z
                      updated_at: 2016-04-18T05:21:27.339Z
                      name: Seller Success Fee
                      fee_type_id: 2
                      amount: 200
                      to: seller
                      calculated_fee: 10
                      links:
                        self: /fees/1e5e372a-df3a-4f77-af2f-ec294b1715ce
  /charges:
    get:
      tags:
      - Charges
      summary: List Charges
      description: Retrieve an ordered and paginated list of **Charges**.
      operationId: listCharges
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/charges'
              examples:
                response:
                  value:
                    charges:
                    - id: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9
                      name: Charge39221049
                      created_at: 2019-04-29T02:49:09.855Z
                      updated_at: 2019-04-29T02:49:09.855Z
                      state: pending
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      status: 22000
                      amount: 174200
                      account_type: pending
                      promisepay_fee: 3048
                      currency: AUD
                      payment_method: charge
                      buyer_name: Neol1556506027 Calangi
                      buyer_email: neol.calangi+buyer1556506027@promisepay.com
                      buyer_country: AUS
                      seller_name: First1556505750 LastName
                      seller_email: ausplatform1556505750@assemblypayments.com
                      seller_country: AUS
                      links:
                        self: /charges?limit=2&offset
                        buyers: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        sellers: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/sellers
                        status: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/status
                        fees: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/fees
                        transactions: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/transactions
                        batch_transactions: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/batch_transactions
                    - id: a8fb1574-8976-4a56-84f4-ba2936c9c274
                      name: Charge39221014
                      created_at: 2019-04-29T02:48:34.879Z
                      updated_at: 2019-04-29T02:48:41.187Z
                      state: payment_held
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      status: 22175
                      amount: 170700
                      account_id: 201b6450-4c57-0137-05c1-0242ac110002
                      account_type: credit card
                      promisepay_fee: 6004
                      currency: AUD
                      payment_method: charge
                      dynamic_descriptor: "100014012193770"
                      buyer_name: Neol1556506027 Calangi
                      buyer_email: neol.calangi+buyer1556506027@promisepay.com
                      buyer_country: AUS
                      seller_name: First1556505750 LastName
                      seller_email: ausplatform1556505750@assemblypayments.com
                      seller_country: AUS
                      links:
                        self: /charges?limit=2&offset
                        buyers: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/buyers
                        sellers: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/sellers
                        status: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/status
                        fees: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/fees
                        transactions: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/transactions
                        batch_transactions: /charges/a8fb1574-8976-4a56-84f4-ba2936c9c274/batch_transactions
                    links:
                      self: /charges
                    meta:
                      limit: 2
                      offset: 0
                      total: 9
    post:
      tags:
      - Charges
      summary: Create Charge
      description: |
        Create a **Charge**. **Charges** require a specified **Card Account** or **Bank Account**. You may pass through an existing **User**, or define the `user_id` of the new user that will be associated with the **Charge** and the provided Account. The `user_id` can be left blank if you wish for a new user to be created for the **Charge**, or specified if you wish for a new **User** to be created with the passed `user_id`.
      operationId: createCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/charge_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_charge'
              examples:
                response:
                  value:
                    charges:
                      id: 9a91972f-734c-474e-b8dd-5312d1ffd799
                      name: Test Charge 001
                      created_at: 2020-05-03T12:00:54.422Z
                      updated_at: 2020-05-03T12:01:02.340Z
                      state: completed
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      status: 22500
                      amount: 1000
                      account_id: 5ef44050-4c56-0137-abdf-0242ac110002
                      account_type: credit card
                      promisepay_fee: 65
                      currency: AUD
                      payment_method: charge
                      dynamic_descriptor: "100014012464153"
                      buyer_name: Neol1556505753 Calangi
                      buyer_email: neol.calangi+buyer1556505753@promisepay.com
                      buyer_zip: "3000"
                      buyer_country: AUS
                      related:
                        buyers: buyer-1556505753
                        sellers: 76cf57db94d9e1f07a60c009be2adec0
                      links:
                        self: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799
                        buyers: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/buyers
                        sellers: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/sellers
                        status: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/status
                        fees: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/fees
                        transactions: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/transactions
                        batch_transactions: /charges/9a91972f-734c-474e-b8dd-5312d1ffd799/batch_transactions
  /charges/{id}:
    get:
      tags:
      - Charges
      summary: Show Charge
      description: Show details of a specific **Charge** using a given `:id`.
      operationId: showCharge
      parameters:
      - name: id
        in: path
        description: Charge ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9
        example: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_charge'
              examples:
                response:
                  value:
                    charges:
                      id: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9
                      name: Charge39221049
                      created_at: 2019-04-29T02:49:09.855Z
                      updated_at: 2019-04-29T02:49:09.855Z
                      state: pending
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      status: 22000
                      amount: 174200
                      account_type: pending
                      promisepay_fee: 3048
                      currency: AUD
                      payment_method: charge
                      buyer_name: Neol1556506027 Calangi
                      buyer_email: neol.calangi+buyer1556506027@promisepay.com
                      buyer_zip: "1634"
                      buyer_country: AUS
                      related:
                        buyers: buyer-1556506027
                        sellers: 76cf57db94d9e1f07a60c009be2adec0
                      links:
                        self: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9
                        buyers: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        sellers: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/sellers
                        status: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/status
                        fees: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/fees
                        transactions: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/transactions
                        batch_transactions: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/batch_transactions
  /charges/{id}/status:
    get:
      tags:
      - Charges
      summary: Show Charge Status
      description: Show status of a specific **Charge** using a given `:id`.
      operationId: showChargeStatus
      parameters:
      - name: id
        in: path
        description: Charge ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
        example: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_charge_status'
              examples:
                response:
                  value:
                    charges:
                      id: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
                      state: completed
                      status: 22500
  /charges/{id}/buyers:
    get:
      tags:
      - Charges
      summary: Show Charge Buyer
      description: Show the buyer **User** associated with the **Charge** using a given `:id`.
      operationId: showChargeBuyer
      parameters:
      - name: id
        in: path
        description: Charge ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
        example: 4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        items: /users/buyer-1556506027/items
                        card_accounts: /users/buyer-1556506027/card_accounts
                        paypal_accounts: /users/buyer-1556506027/paypal_accounts
                        payid_accounts: /users/buyer-1556506027/payid_accounts
                        bank_accounts: /users/buyer-1556506027/bank_accounts
                        wallet_accounts: /users/buyer-1556506027/wallet_accounts
  /marketplace:
    get:
      tags:
      - Marketplaces
      summary: Show Marketplace
      description: Show details of your **Platform**, providing access to your configuration and related **User** and **Company**.
      operationId: showMarketplace
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketplace'
              examples:
                response:
                  value:
                    marketplaces:
                      id: 041e8015-5101-44f1-9b7d-6a206603f29f
                      name: platform1556505750
                      payment_frequency: daily
                      state: pending
                      active: true
                      business_information: {}
                      disable_approve_logo: false
                      enable_virtual_terminal: false
                      currency: AUD
                      email: ausplatform1556505750@assemblypayments.com
                      seller_white_labeled: false
                      partial_refunds: true
                      related:
                        users: 76cf57db94d9e1f07a60c009be2adec0
                        company: 5ba45160-4c56-0137-55f0-0242ac110002
                      links:
                        self: /marketplace
                        principal: /users/76cf57db94d9e1f07a60c009be2adec0
                        company: /company/5ba45160-4c56-0137-55f0-0242ac110002
  /token_auths:
    post:
      tags:
      - Token Auth
      summary: Generate Token
      description: Create a token, either for a bank or a card account, that can be used with the **PromisePay.js** package to securely send Assembly credit card details.
      operationId: generateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_auth_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  token_auth:
                    type: object
                    properties:
                      token_type:
                        type: string
                      token:
                        type: string
                      user_id:
                        type: string
              examples:
                response:
                  value:
                    token_auth:
                      token_type: bank
                      token: 40341ea80c0baaf43ff45e2473cf2782
                      user_id: seller-68611249
  /tools/status:
    get:
      tags:
      - Tools
      summary: Health check
      description: Displays a health check of the Assembly service.
      operationId: healthCheck
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tools_status'
              examples:
                response:
                  value:
                    status: healthy
  /transactions:
    get:
      tags:
      - Transactions
      summary: List Transactions
      description: 'Retrieve an ordered and paginated list of **Transactions**. Note: `created_before` and `created_after` range can not be greater than 31 days'
      operationId: listTransactions
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: account_id
        in: query
        description: Bank, Card or Wallet Account ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: item_id
        in: query
        description: Item ID
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: transaction_type
        in: query
        description: 'The type of transaction. Options for querying are: payment, refund, disbursement, fee, deposit, withdrawal. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - payment
          - refund
          - disbursement
          - fee
          - deposit
          - withdrawal
      - name: transaction_type_method
        in: query
        description: 'The method the transaction was carried out with. Options for querying are: direct_debit, credit_card, npp, bpay, wire_transfer, wallet_account_transfer, direct_credit, misc. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - direct_debit
          - credit_card
          - npp
          - bpay
          - wallet_account_transfer
          - direct_credit
          - wire_transfer
          - misc
        example: ""
      - name: direction
        in: query
        description: Direction of the transaction.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - debit
          - credit
        example: ""
      - name: user_id
        in: query
        description: User ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_before
        in: query
        description: Date and time in ISO 8601 format the item(s) were created before (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_after
        in: query
        description: Date and time in ISO 8601 format the item(s) were created after (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
              examples:
                response:
                  value:
                    transactions:
                    - id: aed5a210-6f63-0138-63f3-0a58a9feac03
                      created_at: 2020-05-03T12:01:02.230Z
                      updated_at: 2020-05-03T12:01:02.235Z
                      description: Credit of $10.00 to Wallet Account by Debit of $10.00 from Item
                      type: withdrawal
                      type_method: misc
                      state: successful
                      user_id: 76cf57db94d9e1f07a60c009be2adec0
                      user_name: First1556505750 LastName
                      account_id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      account_type: wallet_account
                      amount: 1000
                      currency: AUD
                      debit_credit: credit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: aed53110-6f63-0138-ea83-0a58a9feac03
                          account_id: 9a91972f-734c-474e-b8dd-5312d1ffd799
                          account_type: item
                          user_id: 76cf57db94d9e1f07a60c009be2adec0
                          user_name: First1556505750 LastName
                          item_name: Test Charge 001
                    - id: aed53110-6f63-0138-ea83-0a58a9feac04
                      created_at: 2020-05-03T12:01:02.203Z
                      updated_at: 2020-05-03T12:01:02.266Z
                      description: Debit of $10.00 from Item for Credit of $10.00 to Wallet Account
                      type: release
                      type_method: wallet_account_transfer
                      state: successful
                      user_id: 76cf57db94d9e1f07a60c009be2adec0
                      user_name: First1556505750 LastName
                      account_id: 9a91972f-734c-474e-b8dd-5312d1ffd799
                      account_type: item
                      item_name: Test Charge 001
                      dynamic_descriptor: "100014012464153"
                      amount: 1000
                      currency: AUD
                      debit_credit: debit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: aed5a210-6f63-0138-63f3-0a58a9feac04
                          account_id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                          account_type: wallet_account
                          user_id: 76cf57db94d9e1f07a60c009be2adec0
                          user_name: First1556505750 LastName
                    meta:
                      limit: 2
                      offset: 0
                      total: 138
                    links:
                      self: /transactions?limit=2
  /transactions/{id}/bank_accounts:
    get:
      tags:
      - Transactions
      summary: Show Transaction Bank Account
      description: Show the **Bank Account** associated with the **Transaction** using a given `:id`.
      operationId: showTransactionBankAccount
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aed53110-6f63-0138-ea83-0a58a9feac04
        example: aed53110-6f63-0138-ea83-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                      active: true
                      created_at: 2020-04-27T20:28:22.378Z
                      updated_at: 2020-04-27T20:28:22.378Z
                      verification_status: verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                        direct_debit_authority_status: approved
                      links:
                        self: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
                        users: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/users
                        direct_debit_authorities: /bank_accounts/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/direct_debit_authorities
  /transactions/{id}:
    get:
      tags:
      - Transactions
      summary: Show Transaction
      description: Show details of a specific **Transaction** using a given `:id`.
      operationId: showTransaction
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 27b91b10-70eb-0138-ec44-0a58a9feac06
        example: 27b91b10-70eb-0138-ec44-0a58a9feac06
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_transaction'
              examples:
                response:
                  value:
                    transactions:
                      id: 27b91b10-70eb-0138-ec44-0a58a9feac06
                      created_at: 2020-05-05T10:43:18.204Z
                      updated_at: 2020-05-05T10:43:18.209Z
                      description: Credit of $1.14 to Wallet Account by Debit of $1.14 from NPP Payin Funding Account
                      payee_name: Test Assembly
                      type: deposit
                      type_method: npp_payin
                      state: successful
                      user_id: buyer-71385870
                      user_name: Neol Buyer
                      account_id: 17bac5f0-70eb-0138-3425-0a58a9feac06
                      account_type: wallet_account
                      amount: 114
                      currency: AUD
                      debit_credit: credit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: 27b8fff0-70eb-0138-7dc9-0a58a9feac06
                          account_id: 8c024550-fc22-0136-ad8b-0242ac110003
                          account_type: npp_payin_account
                          user_id: buyer-71385870
                          user_name: Neol Buyer
                      payin_details:
                        debtor_name: Test Assembly
                        debtor_legal_name: Test Assembly
                        debtor_bsb: "923100"
                        debtor_account: "92310031694004"
                        clearing_system_transaction_id: INGBAU2SXXXN20181213009149405094650
                        remittance_information: "100014013068940"
                        pay_id: npp@assemblypayments.com
                        pay_id_type: /EMAL
                        end_to_end_id: NOTPROVIDED
                        npp_payin_internal_id: 3a768370-8ebd-11ea-a8ab-af8225e7132d
                      links:
                        self: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06
                        users: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/users
                        fees: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/fees
                        wallet_accounts: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/wallet_accounts
                        card_accounts: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/card_accounts
                        paypal_accounts: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/paypal_accounts
                        bank_accounts: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/bank_accounts
                        items: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/items
                        marketplaces: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/marketplaces
                        npp_payin_transaction_detail: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/npp_payin_transaction_detail
                        supplementary_data: /transactions/27b91b10-70eb-0138-ec44-0a58a9feac06/supplementary_data
  /transactions/{id}/card_accounts:
    get:
      tags:
      - Transactions
      summary: Show Transaction Card Account
      description: Show the **Card Account** associated with the **Transaction** using a given `:id`.
      operationId: showTransactionCardAccount
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ea36e48a-4638-4d1a-a345-e1a0a584df8b
        example: ea36e48a-4638-4d1a-a345-e1a0a584df8b
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account'
              examples:
                response:
                  value:
                    card_accounts:
                      active: false
                      created_at: 2019-04-29T02:42:37.246Z
                      updated_at: 2020-05-03T12:01:01.378Z
                      id: 5ef44050-4c56-0137-abdf-0242ac110002
                      verification_status: not_verified
                      cvv_verified: true
                      currency: AUD
                      card:
                        type: visa
                        full_name: Neol Calangi
                        number: XXXX-XXXX-XXXX-1111
                        expiry_month: "7"
                        expiry_year: "2021"
                      links:
                        self: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/card_accounts
                        users: /card_accounts/5ef44050-4c56-0137-abdf-0242ac110002/users
  /transactions/{id}/fees:
    get:
      tags:
      - Transactions
      summary: Show Transaction Fees
      description: Show the **Fees** associated with the **Transaction** using a given `:id`.
      operationId: showTransactionFees
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ea36e48a-4638-4d1a-a345-e1a0a584df8b
        example: ea36e48a-4638-4d1a-a345-e1a0a584df8b
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fees'
              examples:
                response:
                  value:
                    fees:
                      id: 1e5e372a-df3a-4f77-af2f-ec294b1715ce
                      created_at: 2016-04-18T05:21:27.339Z
                      updated_at: 2016-04-18T05:21:27.339Z
                      name: Seller Success Fee
                      fee_type_id: 2
                      amount: 200
                      to: seller
                      links:
                        self: /fees/1e5e372a-df3a-4f77-af2f-ec294b1715ce
  /transactions/{id}/wallet_accounts:
    get:
      tags:
      - Transactions
      summary: Show Transaction Wallet Account
      description: Show the **Wallet Account** associated with the **Transaction** using a given `:id`.
      operationId: showTransactionWalletAccount
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ea36e48a-4638-4d1a-a345-e1a0a584df8b
        example: ea36e48a-4638-4d1a-a345-e1a0a584df8b
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      active: true
                      created_at: 2019-04-29T02:42:31.536Z
                      updated_at: 2020-05-03T12:01:02.254Z
                      balance: 663337
                      currency: AUD
                      links:
                        self: /transactions/aed45af0-6f63-0138-901c-0a58a9feac03/wallet_accounts
                        users: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/users
                        batch_transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/batch_transactions
                        transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/transactions
                        bpay_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/bpay_details
                        npp_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/npp_details
                        virtual_accounts: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/virtual_accounts
  /transactions/{id}/users:
    get:
      tags:
      - Transactions
      summary: Show Transaction User
      description: Show the **User** associated with the **Transaction** using a given `:id`.
      operationId: showTransactionUser
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /transactions/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /batch_transactions:
    get:
      tags:
      - Batch Transactions
      summary: List Batch Transactions
      description: |
        Retrieve an ordered and paginated list of existing **Batch Transactions**. The list can be filtered by **Account**, **Batch ID**, **Item**, and **Transaction Type**.
      operationId: listBatchTransactions
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: account_id
        in: query
        description: Bank, Card or Wallet Account ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: batch_id
        in: query
        description: Batch ID. This appears on a bank reference.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: item_id
        in: query
        description: Item ID
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: transaction_type
        in: query
        description: 'The type of transaction. Options for querying are: payment, refund, disbursement, fee, deposit, withdrawal. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - payment
          - refund
          - disbursement
          - fee
          - deposit
          - withdrawal
      - name: transaction_type_method
        in: query
        description: 'The method the transaction was carried out with. Options for querying are: direct_debit, credit_card, npp, bpay, wire_transfer, wallet_account_transfer, direct_credit, misc. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - direct_debit
          - credit_card
          - npp
          - bpay
          - wallet_account_transfer
          - direct_credit
          - wire_transfer
          - misc
        example: ""
      - name: direction
        in: query
        description: Direction of the transaction. Options are debit, credit
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - debit
          - credit
        example: ""
      - name: created_before
        in: query
        description: Date and time in ISO 8601 format the item(s) were created before (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_after
        in: query
        description: Date and time in ISO 8601 format the item(s) were created after (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: disbursement_bank
        in: query
        description: The bank used for disbursing the payment. Please use a default value of `any`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: any
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_batch_transactions'
              examples:
                response:
                  value:
                    batch_transactions:
                    - created_at: 2020-05-04T02:05:21.577Z
                      updated_at: 2020-05-04T02:05:57.302Z
                      status: 12200
                      id: 12484
                      uuid: fe121ef2-1304-4e32-87f8-cb35907e9086
                      account_external:
                        account_type_id: 9100
                        currency:
                          code: AUD
                      external_account_details: |
                        wl+nVSMZ3zoQPf7R3gAB4zqbj57ufv/lCnTjx64Dmenjb8S4ZNs5xI/GE1Lt
                        0K4GrTh+nChpCP6U3ejlxNDi0fK0DUNF2XR0LkuAtJGlXsiH/adpzIhOtkaD
                        96yT5lu5/bNOw8oNykr3oUol7mqJf6GHf2Qp+Fb4QG8UdS1lO8hHMpCjHfal
                        DqQjHbsO2CP3AxwDOE8dVAlihYayEhc/rYbmE+LHbfXXLYBMeUgn+ELf5KIR
                        2qNUmjMCGlbeChX9Ek13LL5gwV9HmqYLl+w065+4ey27kfHHeByiMq6xXTNm
                        vi10XWswHAjAjahZHQz97FPPFDF9jEfU+UCPNrk1iQ==
                      external_account_details_encrypted: true
                      marketplace:
                        name: platform neol 1556509948
                        uuid: 8124ac0a-4ac2-4a30-a036-b00120118a87
                        account_details: |
                          Cb7Sku6dDbSUKXkGpka/YXnw0m4lD/MVVNjmZ2Ki910kgLJnJMeENVL2+tRj
                          5aOtXSqYOknPCQ/ZbVaQCutMvGjlw1IeQCvaP2D/cz3yKTbk5eezJvKXnQ8t
                          i0y2R1LPTu3nsfaRIn/J0o4nhfyO1qnA3rpfeS2GgRhLaDy7DDOQ2Bz3i7uu
                          aFKKLqM6GUyeTweUnCX1WoR3YHPN5Jk/4mPz7LwGJ+7L4GlfACvEuMb5Ls0Z
                          g1hUzz8PJt3SBMpM620NephmNnfCLnxpbtuf9CNqDibjuZOLwtn0JlLQRei9
                          41hMOLmzzX2SwuiL2ghqOxSpUPsByC8UuJhMSsQ48g==
                        account_details_encrypted: true
                      first_name: Assembly
                      last_name: seller71264506
                      user_email: neol_seller71264506@assemblypayments.com
                      user_external_id: seller-71264506
                      type: disbursement
                      type_method: direct_credit
                      batch_id: 241
                      reference: '241: platform neol 1556509948'
                      state: batched
                      user_id: 84feb680-6fd0-0138-f438-0a58a9feac03
                      account_id: 851265b0-6fd0-0138-7374-0a58a9feac03
                      from_user_name: Assembly seller71264506
                      from_user_id: 84feb680-6fd0-0138-f438-0a58a9feac03
                      account_type: wallet_account
                      amount: 542419
                      currency: AUD
                      debit_credit: credit
                      item: {}
                      description: Debit of $5,424.19 from Wallet Account for Credit of $5,424.19 to Bank Account
                      related:
                        account_to:
                          id: 8557cae0-6fd0-0138-8cac-0a58a9feac03
                          account_type: bank_account
                          user_id: 84feb680-6fd0-0138-f438-0a58a9feac03
                    - created_at: 2020-05-04T02:05:21.303Z
                      updated_at: 2020-05-04T02:05:57.188Z
                      status: 12200
                      id: 12483
                      uuid: b843535a-903f-4351-aa0c-983c6e6eecb1
                      account_external:
                        account_type_id: 9100
                        currency:
                          code: AUD
                      external_account_details: |
                        a6egntycAJXBoJnbiWVh5yuNeLl0Cc20Wk+kCKpoYPd+q/P5mShk2s5BLJts
                        wZOR+SaoTZ5UXj7TlEH0dZKSBLTVwCHofdJwXF+9m1SZJBRALQWny9p+VK1R
                        y2wOCvvANx58a2YCvwV60eI3sHnTbOda1P6D0WC8ghAszoEzfJAIwc9j6OFE
                        /8DUGqhqJbvHCmtXUztca/Ugf8aRLxZwRUigFSr4Ht+2OZRT3I6F+phh7CTq
                        5rqu70T44DpIvOOqdxQTsix1FW8PskW3k5d3NrgUYFJ4itjlyfHg7ESYI2Q4
                        vnCNymXoLIkAgil4dFM+4A+6UAsKdBL0HwR3YpXoZA==
                      external_account_details_encrypted: true
                      marketplace:
                        name: platform neol 1556509948
                        uuid: 8124ac0a-4ac2-4a30-a036-b00120118a87
                        account_details: |
                          Cb7Sku6dDbSUKXkGpka/YXnw0m4lD/MVVNjmZ2Ki910kgLJnJMeENVL2+tRj
                          5aOtXSqYOknPCQ/ZbVaQCutMvGjlw1IeQCvaP2D/cz3yKTbk5eezJvKXnQ8t
                          i0y2R1LPTu3nsfaRIn/J0o4nhfyO1qnA3rpfeS2GgRhLaDy7DDOQ2Bz3i7uu
                          aFKKLqM6GUyeTweUnCX1WoR3YHPN5Jk/4mPz7LwGJ+7L4GlfACvEuMb5Ls0Z
                          g1hUzz8PJt3SBMpM620NephmNnfCLnxpbtuf9CNqDibjuZOLwtn0JlLQRei9
                          41hMOLmzzX2SwuiL2ghqOxSpUPsByC8UuJhMSsQ48g==
                        account_details_encrypted: true
                      first_name: Assembly
                      last_name: seller71264480
                      user_email: neol_seller71264480@assemblypayments.com
                      user_external_id: seller-71264480
                      type: disbursement
                      type_method: direct_credit
                      batch_id: 241
                      reference: '241: platform neol 1556509948'
                      state: batched
                      user_id: 755042f0-6fd0-0138-7c6e-0a58a9feac03
                      account_id: 7588e1c0-6fd0-0138-8e9a-0a58a9feac03
                      from_user_name: Assembly seller71264480
                      from_user_id: 755042f0-6fd0-0138-7c6e-0a58a9feac03
                      account_type: wallet_account
                      amount: 815439
                      currency: AUD
                      debit_credit: credit
                      item: {}
                      description: Debit of $8,154.39 from Wallet Account for Credit of $8,154.39 to Bank Account
                      related:
                        account_to:
                          id: 75dc2840-6fd0-0138-f50b-0a58a9feac03
                          account_type: bank_account
                          user_id: 755042f0-6fd0-0138-7c6e-0a58a9feac03
                    meta:
                      limit: 2
                      offset: 0
                      total: 1378
                    links:
                      self: /batch_transactions?limit=2&user_id=&transaction_type=&batch_id=&disbursement_bank
  /batch_transactions/{id}:
    get:
      tags:
      - Batch Transactions
      summary: Show Batch Transaction
      description: Get a batch transaction using its ID
      operationId: showBatchTransaction
      parameters:
      - name: id
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_batch_transaction'
              examples:
                response:
                  value:
                    batch_transactions:
                      created_at: 2020-05-05T12:26:59.112Z
                      updated_at: 2020-05-05T12:31:03.389Z
                      id: 13143
                      uuid: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
                      account_external:
                        account_type_id: 9100
                        currency:
                          code: AUD
                      user_email: assemblybuyer71391895@assemblypayments.com
                      first_name: Buyer
                      last_name: Last Name
                      legal_entity_id: 5f46763e-fb7a-4feb-9820-93a5703ddd17
                      user_external_id: buyer-71391895
                      phone: +1588681395
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                        account_details: |
                          hW9azjTFODCCII3tz8oeXWY8ggZe1P0oPVR7mj4i4dew3nQh9g1sc7BhC07e
                          CAoKvO2hhofH3cGoVzbjMUVgcBEh5Q+0ZyomyYZ608A8wT2cER2iPw3Uc9xu
                          5l7RNiW5bX19+ckySth7ACUX8UUV1uScJm16zylGTvVi++otp/mtOUh1o1CB
                          DBgQ7H0JLoxcXevs97E8Fv0Pxu1M7lS+9OsA0rm8l1SXESeuDoAzPHZ9CXBA
                          3EGUROEDJdfZAJ4T4lLSiYq/ppjb4rwoC+g65ju3o3knUO6Q9/8qxbfSIPNM
                          8gN8ZlDsCstk+spDAOY1EQMldXxCkJsdygGOV18S0w==
                        account_details_encrypted: true
                      external_account_details: |
                        e4Y1C51S6jIPVW6/uMezjb1G9HXzdaPXUD6QdpkVgsDJG8uRyP7PeFwQJtgA
                        r37BonDf0CGvO/OWtH72AZ1SEhMIBpPCDAYdRI4AMgyiuZUCcqC4gD9VbpK0
                        14vsvx+NtKAS+BqHir1e9S1mhEnAV9DjT3NnMrVqUEZ1dJpChQ9Tbl+iINWY
                        BdYglbokhSpcPko0s5tk8i9QuBl3qKvyJ0E2GUxSANTJSyefIN97UVJonXpt
                        Ay7UUAPALqafDhjBWE8VNAw4EAXoFG5SSbeKC9LKPIKwzqxlpFvwUuBk/PHw
                        Bl2YwMfvQyi7PsHMBHGJO/+tdiOowTsayoeCyOa7oQ==
                      external_account_details_encrypted: true
                      address_line1: Courtland Ave.
                      address_line2: Courtland Ave.
                      address_city: Macon
                      address_state: GA
                      address_postcode: "31204"
                      address_country:
                        id: 1
                        name: Australia
                        three_code: AUS
                        two_code: au
                        currency_id: 1
                        numeric_code: "36"
                      account_type: 9100
                      type: payment
                      type_method: direct_debit
                      batch_id: 245
                      reference: platform1556505750
                      state: successful
                      status: 12000
                      user_id: 1ea8d380-70f9-0138-ba3b-0a58a9feac06
                      account_id: 26065be0-70f9-0138-9abc-0a58a9feac06
                      from_user_name: Neol1604984243 Calangi
                      from_user_id: 1604984243
                      amount: 109
                      currency: AUD
                      debit_credit: debit
                      description: Debit of $1.09 from Bank Account for Credit of $1.09 to Item
                      related:
                        account_to:
                          id: edf4e4ef-0d78-48db-85e0-0af04c5dc2d6
                          account_type: item
                          user_id: 5b9fe350-4c56-0137-e134-0242ac110002
                      links:
                        self: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55
                        users: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
                        fees: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/fees
                        wallet_accounts: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/wallet_accounts
                        card_accounts: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/card_accounts
                        paypal_accounts: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/paypal_accounts
                        bank_accounts: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bank_accounts
                        items: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                        marketplace: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/marketplaces
  /batch_transactions/{id}/items:
    get:
      tags:
      - Batch Transactions
      summary: Show Batch Transactions Items
      description: Get all the items relating to a batch transactions ID
      operationId: showBatchTransactionItems
      parameters:
      - name: id
        in: path
        description: Batch Transactions ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
              examples:
                response:
                  value:
                    items:
                    - id: 7172300-1-8447
                      name: Item 7172300-1-8447 Escrow
                      description: Test Item 7172300-1-8447
                      created_at: 2020-05-09T07:08:24.727Z
                      updated_at: 2020-05-09T07:08:49.111Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 173
                      deposit_reference: "100014012518964"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71718542@assemblypayments.com
                      seller_name: Assembly seller71718579
                      seller_country: AUS
                      seller_email: neol_seller71718579@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172300-1-8447
                        buyers: /items/7172300-1-8447/buyers
                        sellers: /items/7172300-1-8447/sellers
                        status: /items/7172300-1-8447/status
                        fees: /items/7172300-1-8447/fees
                        transactions: /items/7172300-1-8447/transactions
                        batch_transactions: /items/7172300-1-8447/batch_transactions
                        wire_details: /items/7172300-1-8447/wire_details
                        bpay_details: /items/7172300-1-8447/bpay_details
                    - id: 7172240-1-1578
                      name: Item 7172240-1-1578 Escrow
                      description: Test Item 7172240-1-1578
                      created_at: 2020-05-09T06:58:21.280Z
                      updated_at: 2020-05-09T06:58:57.855Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 110
                      deposit_reference: "100014012518900"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71717945@assemblypayments.com
                      seller_name: Assembly seller71717976
                      seller_country: AUS
                      seller_email: neol_seller71717976@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172240-1-1578
                        buyers: /items/7172240-1-1578/buyers
                        sellers: /items/7172240-1-1578/sellers
                        status: /items/7172240-1-1578/status
                        fees: /items/7172240-1-1578/fees
                        transactions: /items/7172240-1-1578/transactions
                        batch_transactions: /items/7172240-1-1578/batch_transactions
                        wire_details: /items/7172240-1-1578/wire_details
                        bpay_details: /items/7172240-1-1578/bpay_details
                    links:
                      self: /batch_transactions/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                    meta:
                      limit: 2
                      offset: 0
                      total: 55
  /disbursements:
    get:
      tags:
      - Disbursements
      summary: List Disbursements
      description: |
        Retrieve an ordered and paginated list of existing **Disbursements**. The list can be filtered by **Batch ID**.
      operationId: listDisbursement
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: batch_id
        in: query
        description: Batch ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disbursements'
              examples:
                response:
                  value:
                    disbursements:
                    - id: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
                      amount: 109
                      currency: AUD
                      batch_id: 245
                      created_at: 2020-05-05T12:26:59.112Z
                      updated_at: 2020-05-05T12:31:03.389Z
                      state: successful
                      links:
                        transactions: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/transactions
                        wallet_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/wallet_accounts
                        bank_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bank_accounts
                        paypal_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/paypal_accounts
                        items: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                        users: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
  /disbursements/{id}:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement
      description: Get a disbursment using its ID
      operationId: showDisbursement
      parameters:
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_disbursement'
              examples:
                response:
                  value:
                    disbursements:
                      id: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
                      amount: 109
                      currency: AUD
                      batch_id: 245
                      created_at: 2020-05-05T12:26:59.112Z
                      updated_at: 2020-05-05T12:31:03.389Z
                      state: successful
                      links:
                        transactions: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/transactions
                        wallet_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/wallet_accounts
                        bank_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bank_accounts
                        paypal_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/paypal_accounts
                        items: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                        users: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
  /disbursements/{id}/transactions:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement Transactions
      description: Get all the transactions relating to a disbursment ID
      operationId: showDisbursementTransactions
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
              examples:
                response:
                  value:
                    transactions:
                    - id: 35b60310-75a9-0138-0beb-0a58a9feac05
                      created_at: 2020-05-11T11:33:50.704Z
                      updated_at: 2020-05-11T11:33:50.707Z
                      description: Credit of $1.02 to Item by Debit of $1.02 from Credit Card
                      type: payment
                      type_method: credit_card
                      state: successful
                      user_id: 76cf57db94d9e1f07a60c009be2adec0
                      user_name: First1556505750 LastName
                      account_id: 7190985-1-9382
                      account_type: item
                      item_name: Item 7190985-1-9382 Escrow
                      dynamic_descriptor: "100014012533407"
                      amount: 102
                      currency: AUD
                      debit_credit: credit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: 35b5e450-75a9-0138-41d5-0a58a9feac05
                          account_id: 725cc8c0-759b-0138-5d6d-0a58a9feac05
                          account_type: card_account
                          user_id: buyer-719013950014
                          user_name: Neol Buyer
                    - id: 35b5e450-75a9-0138-41d5-0a58a9feac05
                      created_at: 2020-05-11T11:33:50.691Z
                      updated_at: 2020-05-11T11:33:50.729Z
                      description: Debit of $1.02 from Credit Card for Credit of $1.02 to Item
                      type: payment
                      type_method: credit_card
                      state: successful
                      user_id: buyer-719013950014
                      user_name: Neol Buyer
                      account_id: 725cc8c0-759b-0138-5d6d-0a58a9feac05
                      account_type: card_account
                      amount: 102
                      currency: AUD
                      debit_credit: debit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: 35b60310-75a9-0138-0beb-0a58a9feac05
                          account_id: 7190985-1-9382
                          account_type: item
                          user_id: 76cf57db94d9e1f07a60c009be2adec0
                          user_name: First1556505750 LastName
                          item_name: Item 7190985-1-9382 Escrow
                    meta:
                      limit: 2
                      offset: 0
                      total: 156
                    links:
                      self: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/transactions
  /disbursements/{id}/wallet_accounts:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement Wallet Accounts
      description: Get all the wallet accounts relating to a disbursment ID
      operationId: showDisbursementWalletAccounts
      parameters:
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      active: true
                      created_at: 2019-04-29T02:42:31.536Z
                      updated_at: 2020-05-03T12:01:02.254Z
                      balance: 663337
                      currency: AUD
                      links:
                        self: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/wallet_accounts
                        users: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
                        batch_transactions: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/batch_transactions
                        transactions: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/transactions
                        bpay_details: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bpay_details
                        npp_details: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/npp_details
                        virtual_accounts: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/virtual_accounts
  /disbursements/{id}/bank_accounts:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement Bank Accounts
      description: Get all the bank accounts relating to disbursement ID
      operationId: showDisbursementBankAccounts
      parameters:
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
                      created_at: 2016-04-12T09:20:38.540Z
                      updated_at: 2016-04-12T09:20:38.540Z
                      active: true
                      verification_status: not_verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                      links:
                        self: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bank_accounts
                        users: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
                        direct_debit_authorities: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/direct_debit_authorities
  /disbursements/{id}/users:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement Users
      description: Get all the users relating to disbursement ID
      operationId: showDisbursementUsers
      parameters:
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/users
                        items: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                        card_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/card_accounts
                        paypal_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/paypal_accounts
                        payid_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/payid_accounts
                        bank_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/bank_accounts
                        wallet_accounts: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/wallet_accounts
  /disbursements/{id}/items:
    get:
      tags:
      - Disbursements
      summary: Show Disbursement Items
      description: Get all the items relating to a disbursement ID
      operationId: showDisbursementItems
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: id
        in: path
        description: Disbursement ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
        example: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
              examples:
                response:
                  value:
                    items:
                    - id: 7172300-1-8447
                      name: Item 7172300-1-8447 Escrow
                      description: Test Item 7172300-1-8447
                      created_at: 2020-05-09T07:08:24.727Z
                      updated_at: 2020-05-09T07:08:49.111Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 173
                      deposit_reference: "100014012518964"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71718542@assemblypayments.com
                      seller_name: Assembly seller71718579
                      seller_country: AUS
                      seller_email: neol_seller71718579@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172300-1-8447
                        buyers: /items/7172300-1-8447/buyers
                        sellers: /items/7172300-1-8447/sellers
                        status: /items/7172300-1-8447/status
                        fees: /items/7172300-1-8447/fees
                        transactions: /items/7172300-1-8447/transactions
                        batch_transactions: /items/7172300-1-8447/batch_transactions
                        wire_details: /items/7172300-1-8447/wire_details
                        bpay_details: /items/7172300-1-8447/bpay_details
                    - id: 7172240-1-1578
                      name: Item 7172240-1-1578 Escrow
                      description: Test Item 7172240-1-1578
                      created_at: 2020-05-09T06:58:21.280Z
                      updated_at: 2020-05-09T06:58:57.855Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 110
                      deposit_reference: "100014012518900"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71717945@assemblypayments.com
                      seller_name: Assembly seller71717976
                      seller_country: AUS
                      seller_email: neol_seller71717976@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172240-1-1578
                        buyers: /items/7172240-1-1578/buyers
                        sellers: /items/7172240-1-1578/sellers
                        status: /items/7172240-1-1578/status
                        fees: /items/7172240-1-1578/fees
                        transactions: /items/7172240-1-1578/transactions
                        batch_transactions: /items/7172240-1-1578/batch_transactions
                        wire_details: /items/7172240-1-1578/wire_details
                        bpay_details: /items/7172240-1-1578/bpay_details
                    links:
                      self: /disbursements/90c1418b-f4f4-413e-a4ba-f29c334e7f55/items
                    meta:
                      limit: 2
                      offset: 0
                      total: 55
  /users/{id}/card_accounts:
    get:
      tags:
      - Users
      summary: Show User Card Account
      description: Show the user’s active card account using a given `:id`.
      operationId: showUserCardAccount
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: buyer-71439598
        example: buyer-71439598
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_account'
              examples:
                response:
                  value:
                    card_accounts:
                      active: true
                      created_at: 2020-05-06T01:38:29.022Z
                      updated_at: 2020-05-06T01:38:29.022Z
                      id: 35977230-7168-0138-0a1d-0a58a9feac07
                      verification_status: not_verified
                      cvv_verified: true
                      currency: AUD
                      card:
                        type: visa
                        full_name: Neol Test
                        number: XXXX-XXXX-XXXX-1111
                        expiry_month: "7"
                        expiry_year: "2021"
                      links:
                        self: /users/buyer-71439598/card_accounts
                        users: /card_accounts/35977230-7168-0138-0a1d-0a58a9feac07/users
  /users/{id}:
    get:
      tags:
      - Users
      summary: Show User
      description: Show details of a specific User using a given `:id`.
      operationId: showUser
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: buyer-1556506027
        example: buyer-1556506027
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /users/buyer-1556506027
                        items: /users/buyer-1556506027/items
                        card_accounts: /users/buyer-1556506027/card_accounts
                        paypal_accounts: /users/buyer-1556506027/paypal_accounts
                        payid_accounts: /users/buyer-1556506027/payid_accounts
                        bank_accounts: /users/buyer-1556506027/bank_accounts
                        wallet_accounts: /users/buyer-1556506027/wallet_accounts
    patch:
      tags:
      - Users
      summary: Update User
      description: Update an existing **User’s** attributes using a given `:id`.
      operationId: updateUser
      parameters:
      - name: id
        in: path
        description: Unique ID that can be generated by the platform. Cannot contain ’.’ character.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: buyer-1556506027
        example: buyer-1556506027
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        items: /users/buyer-1556506027/items
                        card_accounts: /users/buyer-1556506027/card_accounts
                        paypal_accounts: /users/buyer-1556506027/paypal_accounts
                        payid_accounts: /users/buyer-1556506027/payid_accounts
                        bank_accounts: /users/buyer-1556506027/bank_accounts
                        wallet_accounts: /users/buyer-1556506027/wallet_accounts
  /users/{id}/identity_verified:
    patch:
      tags:
      - Users
      summary: Verify User (Prelive Only)
      description: |
        Sets a user’s verification state to `approved` on pre-live given the **User** `:id`. Ensure that a **User** has the required user verification information before using this call, otherwise the call will fail. **Note**: This API call will only work in our pre-live environment. The user verification workflow holds for all users in production.
      operationId: verifyUser
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: buyer-1556506027
        example: buyer-1556506027
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        items: /users/buyer-1556506027/items
                        card_accounts: /users/buyer-1556506027/card_accounts
                        paypal_accounts: /users/buyer-1556506027/paypal_accounts
                        payid_accounts: /users/buyer-1556506027/payid_accounts
                        bank_accounts: /users/buyer-1556506027/bank_accounts
                        wallet_accounts: /users/buyer-1556506027/wallet_accounts
  /users/{id}/bank_accounts:
    get:
      tags:
      - Users
      summary: Show User Bank Account
      description: Shows the user’s active bank account using a given `:id`.
      operationId: showUserBankAccount
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
        example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_account'
              examples:
                response:
                  value:
                    bank_accounts:
                      id: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
                      created_at: 2016-04-12T09:20:38.540Z
                      updated_at: 2016-04-12T09:20:38.540Z
                      active: true
                      verification_status: not_verified
                      currency: AUD
                      bank:
                        bank_name: Bank of Australia
                        country: AUS
                        account_name: Samuel Seller
                        routing_number: XXXXX3
                        account_number: XXX234
                        holder_type: personal
                        account_type: checking
                      links:
                        self: /users/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/bank_accounts
                        users: /bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/users
                        direct_debit_authorities: /bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/direct_debit_authorities
  /users/{id}/disbursement_account:
    patch:
      tags:
      - Users
      summary: Set User Disbursement Account
      description: Set the **User’s Disbursement Account** using a given **User** `:id` and a **Bank Account** `:account_id`.
      operationId: setUserDisbursementAccount
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: Seller_1234
        example: Seller_1234
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_account_id_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /bank_accounts/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /users:
    get:
      tags:
      - Users
      summary: List Users
      description: Retrieve an ordered and paginated list of existing **Users**.
      operationId: listUsers
      parameters:
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: search
        in: query
        description: A text value to be used for searching users
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
              examples:
                response:
                  value:
                    users:
                    - id: seller-71460518
                      full_name: Assembly seller71460518
                      first_name: Assembly
                      last_name: seller71460518
                      created_at: 2020-05-06T07:26:59.479Z
                      updated_at: 2020-05-06T07:26:59.479Z
                      email: neol_seller71460518@assemblypayments.com
                      mobile: +1588750018
                      location: N/A
                      links:
                        self: /users/seller-71460518
                        items: /users/seller-71460518/items
                        card_accounts: /users/seller-71460518/card_accounts
                        paypal_accounts: /users/seller-71460518/paypal_accounts
                        bank_accounts: /users/seller-71460518/bank_accounts
                        wallet_accounts: /users/seller-71460518/wallet_accounts
                    - id: buyer-71439598
                      full_name: Buyer
                      first_name: Buyer
                      last_name: ""
                      created_at: 2020-05-06T01:38:19.116Z
                      updated_at: 2020-05-06T02:03:25.941Z
                      email: assemblybuyer71439598@assemblypayments.com
                      location: N/A
                      links:
                        self: /users/buyer-71439598
                        items: /users/buyer-71439598/items
                        card_accounts: /users/buyer-71439598/card_accounts
                        paypal_accounts: /users/buyer-71439598/paypal_accounts
                        bank_accounts: /users/buyer-71439598/bank_accounts
                        wallet_accounts: /users/buyer-71439598/wallet_accounts
                    meta:
                      limit: 2
                      offset: 0
                      total: 16
                    links:
                      self: /users
    post:
      tags:
      - Users
      summary: Create User
      description: |
        Create a **User**. **Users** can be associated with **Items** either as a buyer or a seller. **Users** can’t be both the buyer and seller for the same **Item**. **Note**: Some parameters are required for user verification. See our guide on [Onboarding a Payout User/Seller](https://developer.assemblypayments.com/docs/onboarding-a-pay-out-user) for more information.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2019-04-29T02:47:08.348Z
                      updated_at: 2019-04-29T02:47:08.348Z
                      full_name: Neol1556506027 Calangi
                      email: neol.calangi+buyer1556506027@promisepay.com
                      mobile: +21556506027
                      first_name: Neol1556506027
                      last_name: Calangi
                      id: buyer-1556506027
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      flags: {}
                      related:
                        addresses: 00eb5be0-4c57-0137-ad3d-0242ac110002
                      links:
                        self: /charges/4d7d73f5-c7f0-477d-aff8-7570d2c7e7d9/buyers
                        items: /users/buyer-1556506027/items
                        card_accounts: /users/buyer-1556506027/card_accounts
                        paypal_accounts: /users/buyer-1556506027/paypal_accounts
                        payid_accounts: /users/buyer-1556506027/payid_accounts
                        bank_accounts: /users/buyer-1556506027/bank_accounts
                        wallet_accounts: /users/buyer-1556506027/wallet_accounts
  /users/{id}/items:
    get:
      tags:
      - Users
      summary: List User Items
      description: Retrieve an ordered and paginated list of existing **Items** the **User** is associated with using a given `:id`.
      operationId: listUserItems
      parameters:
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: test-user-1592459047-22
        example: test-user-1592459047-22
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
              examples:
                response:
                  value:
                    items:
                    - id: 7139651-1-2046
                      name: Item 7139651-1-2046
                      description: Test Item 7139651-1-2046
                      created_at: 2020-05-05T12:26:50.782Z
                      updated_at: 2020-05-05T12:31:03.654Z
                      state: payment_deposited
                      payment_type_id: 2
                      status: 22200
                      amount: 109
                      deposit_reference: "100014012501482"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71391895@assemblypayments.com
                      seller_name: Assembly seller71391950
                      seller_country: AUS
                      seller_email: neol_seller71391950@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7139651-1-2046
                        buyers: /items/7139651-1-2046/buyers
                        sellers: /items/7139651-1-2046/sellers
                        status: /items/7139651-1-2046/status
                        fees: /items/7139651-1-2046/fees
                        transactions: /items/7139651-1-2046/transactions
                        batch_transactions: /items/7139651-1-2046/batch_transactions
                        wire_details: /items/7139651-1-2046/wire_details
                        bpay_details: /items/7139651-1-2046/bpay_details
                    links:
                      self: /items
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
  /users/{id}/wallet_accounts:
    get:
      tags:
      - Users
      summary: Show User Wallet Account
      description: Show the **User’s Wallet Account** using a given `:id`.
      operationId: showUserWalletAccounts
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: aed45af0-6f63-0138-901c-0a58a9feac03
        example: aed45af0-6f63-0138-901c-0a58a9feac03
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      active: true
                      created_at: 2019-04-29T02:42:31.536Z
                      updated_at: 2020-05-03T12:01:02.254Z
                      balance: 663337
                      currency: AUD
                      links:
                        self: /transactions/aed45af0-6f63-0138-901c-0a58a9feac03/wallet_accounts
                        users: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/users
                        batch_transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/batch_transactions
                        transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/transactions
                        bpay_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/bpay_details
                        npp_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/npp_details
                        virtual_accounts: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/virtual_accounts
  /wallet_accounts/{id}/users:
    get:
      tags:
      - Wallet Accounts
      summary: Show Wallet Account User
      description: Show the **User** the **Wallet Account** is associated with using a given `:id`.
      operationId: showWalletAccountUser
      parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
        example: 901d8cd0-6af3-0138-967d-0a58a9feac04
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /bank_accounts/901d8cd0-6af3-0138-967d-0a58a9feac04/users
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /wallet_accounts/{id}/withdraw:
    post:
      tags:
      - Wallet Accounts
      summary: Withdraw Funds
      description: Withdraw funds from a **Wallet Account** to a specified disbursement account.
      operationId: withdrawFunds
      parameters:
      - name: id
        in: path
        description: Wallet account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: bd6e9c20-73f1-0138-fb91-0a58a9feac09
        example: bd6e9c20-73f1-0138-fb91-0a58a9feac09
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/withdraw_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_disbursement'
              examples:
                response:
                  value:
                    disbursements:
                      id: 8a31ebfa-421b-4cbb-9241-632f71b3778a
                      amount: 173
                      currency: AUD
                      created_at: 2020-05-09T07:09:03.383Z
                      updated_at: 2020-05-09T07:09:04.585Z
                      state: pending
                      to: Bank Account
                      bank_name: Test Bank Assembly
                      bank_account_name: Assembly seller71718579
                      bank_account_number: XXX130
                      bank_routing_number: XXXXX8
                      npp_payout_state: trying
                      links:
                        transactions: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/transactions
                        wallet_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/wallet_accounts
                        bank_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/bank_accounts
                        paypal_accounts: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/paypal_accounts
                        items: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/items
                        users: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/users
  /wallet_accounts/{id}:
    get:
      tags:
      - Wallet Accounts
      summary: Show Wallet Account
      description: Show details of a specific **Wallet Account** using a given `:id.`
      operationId: showWalletAccount
      parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 5c1c6b10-4c56-0137-8cd7-0242ac110002
        example: 5c1c6b10-4c56-0137-8cd7-0242ac110002
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      active: true
                      created_at: 2019-04-29T02:42:31.536Z
                      updated_at: 2020-05-03T12:01:02.254Z
                      balance: 663337
                      currency: AUD
                      links:
                        self: /transactions/aed45af0-6f63-0138-901c-0a58a9feac03/wallet_accounts
                        users: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/users
                        batch_transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/batch_transactions
                        transactions: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/transactions
                        bpay_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/bpay_details
                        npp_details: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/npp_details
                        virtual_accounts: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/virtual_accounts
  /wallet_accounts/{id}/npp_details:
    get:
      tags:
      - Wallet Accounts
      summary: Show Wallet Account NPP Details
      description: Show NPP details of a specific **Wallet Account** using a given `:id.`
      operationId: showWalletAccountNPPDetails
      parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 5c1c6b10-4c56-0137-8cd7-0242ac110002
        example: 5c1c6b10-4c56-0137-8cd7-0242ac110002
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account_npp_details'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      npp_details:
                        pay_id: npp@assemblypayments.com
                        marketplace_pay_ids:
                        - pay_id: npp@assemblypayments.com
                          type: emal
                        - pay_id: Assembly Payments
                          type: orgn
                        - pay_id: 96637632645
                          type: aubn
                        reference: "100014012148074"
                        amount: $0.00
                        currency: AUD
  /wallet_accounts/{id}/bpay_details:
    get:
      tags:
      - Wallet Accounts
      summary: Show Wallet Account BPAY Details
      description: Show BPAY details of a specific **Wallet Account** using a given `:id.`
      operationId: showWalletAccountNBPAYDetails
      parameters:
      - name: id
        in: path
        description: Account ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 5c1c6b10-4c56-0137-8cd7-0242ac110002
        example: 5c1c6b10-4c56-0137-8cd7-0242ac110002
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet_account_bpay_details'
              examples:
                response:
                  value:
                    wallet_accounts:
                      id: 5c1c6b10-4c56-0137-8cd7-0242ac110002
                      bpay_details:
                        biller_code: "230680"
                        reference: "100014012148074"
                        amount: $0.00
                        currency: AUD
  /items:
    get:
      tags:
      - Items
      summary: List Items
      description: OK
      operationId: listItems
      parameters:
      - name: offset
        in: query
        description: Number of records to offset. Required for pagination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: Number of records to retrieve. Up to 200.
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 10
      - name: search
        in: query
        description: A text value to be used for searching within the item description
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_before
        in: query
        description: Date and time in ISO 8601 format the item(s) were created before (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_after
        in: query
        description: Date and time in ISO 8601 format the item(s) were created after (e.g. 2020-02-27T23:54:59Z)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
              examples:
                response:
                  value:
                    items:
                    - id: 7172300-1-8447
                      name: Item 7172300-1-8447
                      description: Test Item 7172300-1-8447
                      created_at: 2020-05-09T07:08:24.727Z
                      updated_at: 2020-05-09T07:08:49.111Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 173
                      deposit_reference: "100014012518964"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71718542@assemblypayments.com
                      seller_name: Assembly seller71718579
                      seller_country: AUS
                      seller_email: neol_seller71718579@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172300-1-8447
                        buyers: /items/7172300-1-8447/buyers
                        sellers: /items/7172300-1-8447/sellers
                        status: /items/7172300-1-8447/status
                        fees: /items/7172300-1-8447/fees
                        transactions: /items/7172300-1-8447/transactions
                        batch_transactions: /items/7172300-1-8447/batch_transactions
                        wire_details: /items/7172300-1-8447/wire_details
                        bpay_details: /items/7172300-1-8447/bpay_details
                    - id: 7172240-1-1578
                      name: Item 7172240-1-1578 Escrow
                      description: Test Item 7172240-1-1578
                      created_at: 2020-05-09T06:58:21.280Z
                      updated_at: 2020-05-09T06:58:57.855Z
                      state: completed
                      payment_type_id: 2
                      status: 22500
                      amount: 110
                      deposit_reference: "100014012518900"
                      buyer_name: Buyer Last Name
                      buyer_country: AUS
                      buyer_email: assemblybuyer71717945@assemblypayments.com
                      seller_name: Assembly seller71717976
                      seller_country: AUS
                      seller_email: neol_seller71717976@assemblypayments.com
                      tds_check_state: NA
                      currency: AUD
                      links:
                        self: /items/7172240-1-1578
                        buyers: /items/7172240-1-1578/buyers
                        sellers: /items/7172240-1-1578/sellers
                        status: /items/7172240-1-1578/status
                        fees: /items/7172240-1-1578/fees
                        transactions: /items/7172240-1-1578/transactions
                        batch_transactions: /items/7172240-1-1578/batch_transactions
                        wire_details: /items/7172240-1-1578/wire_details
                        bpay_details: /items/7172240-1-1578/bpay_details
                    links:
                      self: /items
                    meta:
                      limit: 2
                      offset: 0
                      total: 55
    post:
      tags:
      - Items
      summary: Create Item
      description: |
        Create an **Item**. Items require two **Users**, a buyer and a seller. The `buyer_id` and `seller_id` are your unique user identifiers.
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item_requestBody'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items?id=7190770-1-2908&name=Item%207190770-1-2908&amount=102&payment_type=2&buyer_id=buyer-719013950014&seller_id=seller-71718579&fee_ids=&description=Test%20Item%207190770-1-2908
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}:
    get:
      tags:
      - Items
      summary: Show Item
      description: Show details of a specific **Item** using a given `:id`.
      operationId: showItem
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items?id=7190770-1-2908
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
    delete:
      tags:
      - Items
      summary: Delete Item
      description: Delete an existing **Item** using a given `:id`.
      operationId: deleteItem
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: cancelled
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items?id=7190770-1-2908
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
    patch:
      tags:
      - Items
      summary: Update Item
      description: |
        Update an existing **Items** attributes using a given `:id`. Note: An item can only be updated if it’s in `pending` state. Once an item has begun a payment process, you cannot update it.
      operationId: updateItem
      parameters:
      - name: id
        in: path
        description: Item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_item_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items?id=7190770-1-2908&name=Item%207190770-1-2908&amount=102&payment_type=2&buyer_id=buyer-719013950014&seller_id=seller-71718579&fee_ids=&description=Test%20Item%207190770-1-2908
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/sellers:
    get:
      tags:
      - Items
      summary: Show Item Seller
      description: Show the seller **User** associated with the **Item** using a given `:id`.
      operationId: showItemSeller
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190973-1-3780
        example: 7190973-1-3780
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Seller_1234
                      full_name: Samuel Seller
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Seller
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /items/7190973-1-3780/sellers
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /items/{id}/buyers:
    get:
      tags:
      - Items
      summary: Show Item Buyer
      description: Show the buyer **User** associated with the **Item** using a given `:id`.
      operationId: showItemBuyer
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190973-1-3780
        example: 7190973-1-3780
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user'
              examples:
                response:
                  value:
                    users:
                      created_at: 2020-04-03T07:59:00.379Z
                      updated_at: 2020-04-03T07:59:00.379Z
                      id: Buyer_1234
                      full_name: Samuel Buyer
                      email: sam@example.com
                      mobile: 69543131
                      first_name: Samuel
                      last_name: Buyer
                      custom_descriptor: Sam Garden Jobs
                      location: AUS
                      verification_state: pending
                      held_state: false
                      roles:
                      - customer
                      dob: encrypted
                      government_number: encrypted
                      flags: {}
                      related:
                        addresses: 11111111-2222-3333-4444-55555555555,
                      links:
                        self: /items/7190973-1-3780/buyers
                        items: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/items
                        card_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/card_accounts
                        paypal_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/paypal_accounts
                        payid_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/payid_accounts
                        bank_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/bank_accounts
                        wallet_accounts: /users/e6bc0480-57ae-0138-c46e-0a58a9feac03/wallet_accounts
  /items/{id}/fees:
    get:
      tags:
      - Items
      summary: Show Item Fees
      description: Show the **Fees** associated with the **Item** using a given `:id`.
      operationId: showItemFees
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190973-1-3780
        example: 7190973-1-3780
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fees'
              examples:
                response:
                  value:
                    fees:
                    - id: 59826643-35d7-441f-bf44-978df61a80ae
                      created_at: 2020-05-03T11:32:01.092Z
                      updated_at: 2020-05-03T11:32:01.092Z
                      name: marketplace-bpay
                      fee_type_id: 1
                      amount: 150
                      to: buyer
                      links:
                        self: /fees/59826643-35d7-441f-bf44-978df61a80ae
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /fees
  /items/{id}/wire_details:
    get:
      tags:
      - Items
      summary: Show Item Wire Details
      description: Show the **Item** wire payment details using a given `:id`.
      operationId: showItemWireDetails
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190985-1-9382
        example: 7190985-1-9382
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_wire_details_with_id'
              examples:
                response:
                  value:
                    items:
                      id: 7190985-1-9382
                      wire_details:
                        beneficiary: platform1556505750
                        address_line1: ""
                        city: ""
                        state: ""
                        zip: ""
                        routing_number: 83001
                        account_number: "844144573"
                        bank_name: National Australia Bank
                        swift: NATAAU3303M
                        reference: "100014012533407"
                        amount: $1.02
                        currency: AUD
                        country: Australia
  /items/{id}/transactions:
    get:
      tags:
      - Items
      summary: List Item Transactions
      description: Retrieve an ordered and paginated list of **Transactions** associated with the **Item** using a given `:id`.
      operationId: listItemTransactions
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190985-1-9382
        example: 7190985-1-9382
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
              examples:
                response:
                  value:
                    transactions:
                    - id: 35b60310-75a9-0138-0beb-0a58a9feac05
                      created_at: 2020-05-11T11:33:50.704Z
                      updated_at: 2020-05-11T11:33:50.707Z
                      description: Credit of $1.02 to Item by Debit of $1.02 from Credit Card
                      type: payment
                      type_method: credit_card
                      state: successful
                      user_id: 76cf57db94d9e1f07a60c009be2adec0
                      user_name: First1556505750 LastName
                      account_id: 7190985-1-9382
                      account_type: item
                      item_name: Item 7190985-1-9382
                      dynamic_descriptor: "100014012533407"
                      amount: 102
                      currency: AUD
                      debit_credit: credit
                      marketplace:
                        name: platform1556505750
                        uuid: 041e8015-5101-44f1-9b7d-6a206603f29f
                      related:
                        transactions:
                        - id: 35b5e450-75a9-0138-41d5-0a58a9feac05
                          account_id: 725cc8c0-759b-0138-5d6d-0a58a9feac05
                          account_type: card_account
                          user_id: buyer-719013950014
                          user_name: Neol Buyer
                    meta:
                      limit: 10
                      offset: 0
                      total: 1
                    links:
                      self: /items/7190985-1-9382/transactions
  /items/{id}/batch_transactions:
    get:
      tags:
      - Items
      summary: List Item Batch Transactions
      description: Retrieve an ordered and paginated list of **Batch Transactions** associated with the `Item` using a given `:id`. This will include both direct debits coming in, and the disbursements going out.
      operationId: listItemBatchTransactions
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7139651-1-2046
        example: 7139651-1-2046
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_batch_transactions'
              examples:
                response:
                  value:
                    batch_transactions:
                    - created_at: 2020-05-05T12:26:59.112Z
                      updated_at: 2020-05-05T12:31:03.389Z
                      status: 12000
                      id: 90c1418b-f4f4-413e-a4ba-f29c334e7f55
                      type: payment
                      type_method: direct_debit
                      batch_id: 245
                      reference: platform1556505750
                      state: successful
                      user_id: buyer-71391895
                      account_id: 26065be0-70f9-0138-9abc-0a58a9feac06
                      from_user_name: Buyer Last Name
                      from_user_id: buyer-71391895
                      account_type: bank_account
                      amount: 109
                      currency: AUD
                      debit_credit: debit
                      item:
                        id: edf4e4ef-0d78-48db-85e0-0af04c5dc2d6
                        item_number: 7139651-1-2046
                      description: Debit of $1.09 from Bank Account for Credit of $1.09 to Item
                      related:
                        account_to:
                          id: 7139651-1-2046
                          account_type: item
                          user_id: 76cf57db94d9e1f07a60c009be2adec0
                    meta:
                      limit: 2
                      offset: 0
                      total: 1
                    links:
                      self: /items/7190985-1-9382/batch_transactions
  /items/{id}/status:
    get:
      tags:
      - Items
      summary: Show Item Status
      description: Show the status of an **Item** using a given `:id`.
      operationId: showItemStatus
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7139651-1-2046
        example: 7139651-1-2046
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_status'
              examples:
                response:
                  value:
                    items:
                      id: 7efa449a-29b6-4ab3-83d6-03e7eaa4bf7b
                      status: 22000
                      state: pending
  /items/{id}/make_payment:
    patch:
      tags:
      - Item Actions
      summary: Make Payment
      description: |
        Make a payment for an **Item**. Pass the `:account_id` of a **Bank Account** or a **Card Account** associated with the **Item’s** buyer. The **Item** state will transition to one of `payment_held`, `payment_pending` or `completed` for an **Express** or **Approve** payment type.
      operationId: makePayment
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_id_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/make_payment?account_id=725cc8c0-759b-0138-5d6d-0a58a9feac05
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/cancel:
    patch:
      tags:
      - Item Actions
      summary: Cancel
      description: Cancel an **Item**. This will transition the **Item** state to `cancelled`. **Items** can only be cancelled if they haven’t been actioned in any other way.
      operationId: cancelItem
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/cancel
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/refund:
    patch:
      tags:
      - Item Actions
      summary: Refund
      description: Refund an **Item**’s funds. A partial `amount` can be specified otherwise the full amount will be refunded. This will transition the **Item** state to ‘refunded’ if the full amount is refunded, or to the previously held state if a partial `amount` is specified.
      operationId: refund
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID to be refunded
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refund_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    id: 7190770-1-2908
                    name: Item 7190770-1-2908
                    description: Test Item 7190770-1-2908
                    created_at: 2020-05-11T10:26:49.660Z
                    updated_at: 2020-05-11T10:26:49.660Z
                    state: pending
                    net_amount: 102
                    chargedback_amount: 0
                    refunded_amount: 0
                    released_amount: 0
                    seller_url: ""
                    buyer_url: ""
                    remaining_amount: 102
                    status: 22000
                    amount: 102
                    payment_type_id: 2
                    requested_release_amount: 0
                    pending_release_amount: 0
                    deposit_reference: "100014012533386"
                    buyer_fees: 0
                    seller_fees: 0
                    credit_card_fee: 0
                    direct_debit_fee: 0
                    paypal_fee: 0
                    promisepay_fee: 1
                    total_outstanding: 102
                    total_amount: 102
                    currency: AUD
                    payment_method: pending
                    buyer_name: Neol Buyer
                    buyer_email: neol_buyer719013950014@assemblypayments.com
                    buyer_country: AUS
                    seller_name: Assembly seller71718579
                    seller_email: neol_seller71718579@assemblypayments.com
                    seller_country: AUS
                    payment_credit_card_enabled: true
                    payment_direct_debit_enabled: true
                    related:
                      buyers: buyer-719013950014
                      sellers: seller-71718579
                    links:
                      self: /items/7190770-1-2908/refund
                      buyers: /items/7190770-1-2908/buyers
                      sellers: /items/7190770-1-2908/sellers
                      status: /items/7190770-1-2908/status
                      fees: /items/7190770-1-2908/fees
                      transactions: /items/7190770-1-2908/transactions
                      batch_transactions: /items/7190770-1-2908/batch_transactions
                      wire_details: /items/7190770-1-2908/wire_details
                      bpay_details: /items/7190770-1-2908/bpay_details
                      tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/authorize_payment:
    patch:
      tags:
      - Item Actions
      summary: Authorize Payment
      description: |
        Where pre-authentication is enabled on a platform, initiates a credit card payment authorization for an item. When an authorization is successful, your platform holds the item amount for capture, but there is no transfer of funds happening. This call is used with the Capture Payment or Void Payment calls.
      operationId: authorizePayment
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_account_id_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/authorize_payment?account_id=725cc8c0-759b-0138-5d6d-0a58a9feac05
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/capture_payment:
    patch:
      tags:
      - Item Actions
      summary: Capture Payment
      description: |
        Where pre-authentication is enabled on a platform, completes a credit card payment for an item whose payment is authorized. This call is used with the Authorize Payment call.
      operationId: capturePayment
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/capture_payment
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/void_payment:
    patch:
      tags:
      - Item Actions
      summary: Void Payment
      description: |
        Where pre-authentication is enabled on a platform, voids the `payment_authorized` status for an item. This call is used with the Authorize Payment call. **Note**: Not all payment gateways support the Void Payment API call. In this case, you can wait until a payment authorization expires. A payment authorisation expires after 3 to 6 days if not captured.
      operationId: voidPayment
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: pending
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 0
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22000
                      amount: 102
                      payment_type_id: 2
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 102
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/void_payment
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
  /items/{id}/release_payment:
    patch:
      tags:
      - Item Actions
      summary: Release Payment (Deprecated - Do Not Use)
      description: Included for legacy purposes for existing customers that use Escrow payments which are no longer supported for new flows/customers. Release funds held in escrow from an **Item** with an **Escrow** or **Escrow Partial Release** payment type.  This will transition the **Item** state to `completed`.
      operationId: releasePayment
      parameters:
      - name: id
        in: path
        description: Marketplace / Platform item ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: 7190770-1-2908
        example: 7190770-1-2908
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/release_payment_requestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_item'
              examples:
                response:
                  value:
                    items:
                      id: 7190770-1-2908
                      name: Item 7190770-1-2908
                      description: Test Item 7190770-1-2908
                      created_at: 2020-05-11T10:26:49.660Z
                      updated_at: 2020-05-11T10:26:49.660Z
                      state: completed
                      net_amount: 102
                      chargedback_amount: 0
                      refunded_amount: 0
                      released_amount: 102
                      seller_url: ""
                      buyer_url: ""
                      remaining_amount: 102
                      status: 22500
                      amount: 102
                      payment_type_id: 1
                      requested_release_amount: 0
                      pending_release_amount: 0
                      deposit_reference: "100014012533386"
                      buyer_fees: 0
                      seller_fees: 0
                      credit_card_fee: 0
                      direct_debit_fee: 0
                      paypal_fee: 0
                      promisepay_fee: 1
                      total_outstanding: 0
                      total_amount: 102
                      currency: AUD
                      payment_method: pending
                      buyer_name: Neol Buyer
                      buyer_email: neol_buyer719013950014@assemblypayments.com
                      buyer_country: AUS
                      seller_name: Assembly seller71718579
                      seller_email: neol_seller71718579@assemblypayments.com
                      seller_country: AUS
                      payment_credit_card_enabled: true
                      payment_direct_debit_enabled: true
                      related:
                        buyers: buyer-719013950014
                        sellers: seller-71718579
                      links:
                        self: /items/7190770-1-2908/cancel
                        buyers: /items/7190770-1-2908/buyers
                        sellers: /items/7190770-1-2908/sellers
                        status: /items/7190770-1-2908/status
                        fees: /items/7190770-1-2908/fees
                        transactions: /items/7190770-1-2908/transactions
                        batch_transactions: /items/7190770-1-2908/batch_transactions
                        wire_details: /items/7190770-1-2908/wire_details
                        bpay_details: /items/7190770-1-2908/bpay_details
                        tds_checks: /items/7190770-1-2908/tds_checks
components:
  schemas:
    marketplace:
      type: object
      properties:
        marketplaces:
          type: object
          properties:
            id:
              type: string
            group_name:
              type: string
            name:
              type: string
            short_name:
              type: string
            color_1:
              type: string
            color_2:
              type: string
            color_3:
              type: string
            color_4:
              type: string
            color_5:
              type: string
            website:
              type: string
            payment_frequency:
              type: string
            alt_marketplace_id:
              type: string
            state:
              type: string
            logo:
              type: string
            active:
              type: string
            alt_marketplace_auth:
              type: string
            business_information:
              type: object
              properties:
                principal_name:
                  type: string
                principal_government_number:
                  type: string
                incorporation_date:
                  type: string
                bank_account_holder:
                  type: string
                bank_account_number:
                  type: string
                bank_routing_number:
                  type: string
                avg_transaction_value:
                  type: string
                monthly_transactions:
                  type: string
                monthly_disputes:
                  type: string
                monthly_refunds:
                  type: string
                monthly_chargebacks:
                  type: string
                unique_users:
                  type: string
                company_phone:
                  type: string
                company_country:
                  type: string
                transaction_time:
                  type: string
                payments_flow:
                  type: string
                business_model_description:
                  type: string
                customer_support_email:
                  type: string
                bank_name:
                  type: string
                bank_account_type:
                  type: string
                bank_holder_type:
                  type: string
            disable_approve_logo:
              type: boolean
            enable_virtual_terminal:
              type: boolean
            currency:
              type: string
            email:
              type: string
            seller_white_labeled:
              type: boolean
            partial_refunds:
              type: boolean
            related:
              type: object
              properties:
                users:
                  type: string
                company:
                  type: string
            links:
              type: object
              properties:
                self:
                  type: string
                principal:
                  type: string
                company:
                  type: string
    tools_status:
      properties:
        status:
          type: string
          example: healthy
    address:
      type: object
      properties:
        addresses:
          type: object
          properties:
            addressline1:
              type: string
            addressline2:
              type: string
            postcode:
              type: string
            city:
              type: string
            state:
              type: string
            id:
              type: string
            country:
              type: string
            links:
              type: object
              properties:
                self:
                  type: string
    account:
      type: object
      properties:
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
          example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
        currency:
          type: string
          example: AUD
    bank_account_deletion:
      properties:
        bank_account:
          type: string
          example: Successfully redacted
    bank_account:
      type: object
      properties:
        bank_accounts:
          type: object
          properties:
            active:
              type: boolean
              example: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            id:
              type: string
              format: uuid
              example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
            currency:
              type: string
              example: AUD
            verification_status:
              type: string
              example: not_verified
              enum:
              - verified
              - not_verified
            bank:
              type: object
              properties:
                bank_name:
                  type: string
                  example: Bank of Australia
                country:
                  type: string
                  example: AUS
                account_name:
                  type: string
                  example: Samuel Seller
                routing_number:
                  type: string
                  example: XXXXX3
                account_number:
                  type: string
                  example: XXX234
                holder_type:
                  type: string
                  example: personal
                  enum:
                  - personal
                  - business
                account_type:
                  type: string
                  example: checking
                  enum:
                  - savings
                  - checking
                direct_debit_authority_status:
                  type: string
                  readOnly: true
                  example: approved
                  enum:
                  - "null"
                  - approved
            links:
              type: object
              properties:
                self:
                  type: string
                users:
                  type: string
                direct_debit_authorities:
                  type: string
    card_account_deletion:
      properties:
        card_account:
          type: string
          example: Successfully redacted
    card_account:
      type: object
      properties:
        card_accounts:
          type: object
          properties:
            active:
              type: boolean
              example: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            id:
              type: string
              format: uuid
              example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
            currency:
              type: string
              example: AUD
            cvv_verified:
              type: boolean
              example: true
            verification_status:
              type: string
              example: not_verified
              enum:
              - verified
              - not_verified
            card:
              type: object
              properties:
                type:
                  type: string
                  example: visa
                full_name:
                  type: string
                  example: Bella Buyer
                number:
                  type: string
                  example: XXXX-XXXX-XXXX-1111
                expiry_month:
                  type: string
                  example: "10"
                expiry_year:
                  type: string
                  example: "2020"
              readOnly: true
            links:
              type: object
              properties:
                self:
                  type: string
                  example: /users/buyer-71439598/card_accounts
                users:
                  type: string
                  example: /card_accounts/35977230-7168-0138-0a1d-0a58a9feac07/users
    wallet_account:
      type: object
      properties:
        wallet_accounts:
          type: object
          properties:
            active:
              type: boolean
              example: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            id:
              type: string
              format: uuid
              example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
            currency:
              type: string
              example: AUD
            verification_status:
              type: string
              example: not_verified
              enum:
              - verified
              - not_verified
            balance:
              type: integer
            links:
              type: object
              properties:
                self:
                  type: object
                  example: /transactions/aed45af0-6f63-0138-901c-0a58a9feac03/wallet_accounts
                users:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/users
                batch_transactions:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/batch_transactions
                transactions:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/transactions
                bpay_details:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/bpay_details
                npp_details:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/npp_details
                virtual_accounts:
                  type: object
                  example: /wallet_accounts/5c1c6b10-4c56-0137-8cd7-0242ac110002/virtual_accounts
    wallet_account_npp_details:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
        npp_details:
          type: object
          properties:
            pay_id:
              type: string
            marketplace_pay_ids:
              type: array
              items:
                type: object
                properties:
                  pay_id:
                    type: string
                    example: npp@assemblypayments.com
                  type:
                    type: string
                    enum:
                    - emal
                    - aubn
                    - orgn
            reference:
              type: string
            amount:
              type: string
            currency:
              type: string
    wallet_account_bpay_details:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
        bpay_details:
          type: object
          properties:
            biller_code:
              type: string
            reference:
              type: string
            amount:
              type: string
            currency:
              type: string
    list_bpay_accounts:
      properties:
        bpay_accounts:
          type: array
          items:
            type: object
            properties:
              active:
                type: boolean
                example: true
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              id:
                type: string
                format: uuid
                example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
              currency:
                type: string
                example: AUD
              verification_status:
                type: string
                example: not_verified
                enum:
                - verified
                - not_verified
              bpay_details:
                type: object
                properties:
                  account_name:
                    type: string
                    description: Name assigned by the platform/marketplace to identify the account (similar to a nickname)
                    example: My biller 123
                  biller_code:
                    type: integer
                    example: 123456
                  biller_name:
                    type: string
                    description: Name of the biller as registered in BPay
                    example: ABC Water
                  crn:
                    type: integer
                    example: 987654321
              links:
                type: object
                properties:
                  self:
                    type: string
                  users:
                    type: string
        links:
          type: object
          properties:
            self:
              type: string
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
    bpay_account_deletion:
      properties:
        bpay_account:
          type: string
          example: Successfully redacted
    bpay_account:
      type: object
      properties:
        bpay_accounts:
          type: object
          properties:
            active:
              type: boolean
              example: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            id:
              type: string
              format: uuid
              example: 46deb476-c1a6-41eb-8eb7-26a695bbe5bc
            currency:
              type: string
              example: AUD
            verification_status:
              type: string
              example: not_verified
              enum:
              - verified
              - not_verified
            bpay_details:
              type: object
              properties:
                account_name:
                  type: string
                  description: Name assigned by the platform/marketplace to identify the account (similar to a nickname)
                  example: My biller 123
                biller_code:
                  type: integer
                  example: 123456
                biller_name:
                  type: string
                  description: Name of the biller as registered in BPay
                  example: ABC Water
                crn:
                  type: integer
                  example: 987654321
            links:
              type: object
              properties:
                self:
                  type: string
                users:
                  type: string
    single_user:
      type: object
      properties:
        users:
          $ref: '#/components/schemas/user'
    users:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
    user:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        full_name:
          type: string
          example: Samuel Seller
        email:
          type: string
          format: email
          example: samuel.seller@assemblypayments.com
        mobile:
          type: string
          example: "61491570156"
        phone:
          type: string
        logo_url:
          type: string
        color_1:
          type: string
        color_2:
          type: string
        first_name:
          type: string
          example: Samuel
        last_name:
          type: string
          example: Seller
        id:
          type: string
          example: Seller_1234
        custom_descriptor:
          type: string
        location:
          type: string
          example: AUS
        verification_status:
          type: string
          example: pending
        held_state:
          type: boolean
          example: false
        roles:
          type: array
          items:
            type: string
            example: customer
        dob:
          type: string
          example: encrypted
        government_number:
          type: string
          example: encrypted
        drivers_license:
          type: string
        flags:
          type: object
        related:
          type: object
          properties:
            addresses:
              type: string
              example: fe602dcf-4175-4f88-b5be-3beb04092dcd
        links:
          type: object
          properties:
            self:
              type: string
            items:
              type: string
            card_accounts:
              type: string
            paypal_accounts:
              type: string
            payid_accounts:
              type: string
            bpay_accounts:
              type: string
            bank_accounts:
              type: string
            wallet_accounts:
              type: string
    single_routing_number:
      type: object
      properties:
        routing_number:
          type: object
          properties:
            routing_number:
              type: string
              example: "122235821"
            customer_name:
              type: string
              example: US BANK NA
            address:
              type: string
              example: EP-MN-WN1A
            city:
              type: string
              example: ST. PAUL
            state_code:
              type: string
              example: MN
            zip:
              type: string
              example: "55107"
            zip_extension:
              type: string
              example: "1419"
            phone_area_code:
              type: string
              example: "800"
            phone_prefix:
              type: string
              example: "937"
            phone_suffix:
              type: string
              example: "6310"
    single_item:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/item'
    items:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/item'
        links:
          type: object
          properties:
            self:
              type: string
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
    item:
      required:
      - amount
      - buyer_id
      - id
      - name
      - payment_type
      - seller_id
      type: object
      properties:
        id:
          type: string
          example: 100fd4a0-0538-11e6-b512-3e1d05defe78
        name:
          type: string
          example: 'Landscaping Job #001'
        description:
          type: string
          example: Planting of natives, removal of tree stump.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        state:
          type: string
          example: pending
          enum:
          - pending
          - payment_required
          - wire_pending
          - payment_pending
          - payment_held
          - payment_authorized
          - void_pending
          - voided
          - fraud_hold
          - payment_deposited
          - work_completed
          - problem_flagged
          - problem_resolve_requested
          - problem_escalated
          - completed
          - cancelled
          - refunded
          - refund_pending
          - refund_flagged
          - off_platform_refunded
          - partial_completed
          - partial_paid
          - off_platform_chargedback
        status:
          type: integer
          example: 22000
          enum:
          - 22000
          - 22100
          - 22110
          - 22150
          - 22175
          - 22180
          - 22185
          - 22195
          - 22190
          - 22200
          - 22300
          - 22400
          - 22410
          - 22420
          - 22500
          - 22575
          - 22600
          - 22610
          - 22650
          - 22670
          - 22700
          - 22800
          - 22680
        amount:
          type: integer
          example: 20000
        payment_type_id:
          type: integer
          example: 2
        currency:
          type: string
          example: AUD
        buyer_name:
          type: string
          example: Bella Buyer
        buyer_email:
          type: string
          format: email
          example: bella.buyer@assemblypayments.com
        buyer_country:
          type: string
          example: AUS
        seller_name:
          type: string
          example: Samuel Seller
        seller_email:
          type: string
          format: email
          example: samuel.seller@assemblypayments.com
        seller_country:
          type: string
          format: email
          example: AUS
        tds_check_state:
          type: string
          format: email
          example: NA
        batch_state:
          type: string
        invoice_url:
          type: string
        payout_descriptor:
          type: string
        remaining_amount:
          type: integer
          example: 0
        requested_release_amount:
          type: integer
          example: 0
        custom_descriptor:
          type: string
        net_amount:
          type: integer
          example: 20000
        chargedback_amount:
          type: integer
          example: 0
        refunded_amount:
          type: integer
          example: 0
        released_amount:
          type: integer
          example: 0
        buyer_fees:
          type: integer
          example: 0
        seller_fees:
          type: integer
          example: 400
        credit_card_fee:
          type: integer
          example: 0
        paypal_fee:
          type: integer
          example: 0
        seller_url:
          type: string
        buyer_url:
          type: string
        direct_debit_fee:
          type: integer
          example: 0
        due_date:
          type: string
          format: date
          nullable: true
        pending_release_amount:
          type: integer
          example: 0
        dynamic_descriptor:
          type: string
        deposit_reference:
          type: string
          example: "100014013961629"
        promisepay_fee:
          type: integer
          example: 350
        total_outstanding:
          type: integer
          example: 20000
        total_amount:
          type: integer
          example: 20000
        payment_method:
          type: string
          example: pending
        payment_credit_card_enabled:
          type: boolean
          example: true
        payment_direct_debit_enabled:
          type: boolean
          example: true
        related:
          type: object
          properties:
            buyers:
              type: string
              example: 064d6800-fff3-11e5-86aa-5e5517507c66
            sellers:
              type: string
              example: 5830def0-ffe8-11e5-86aa-5e5517507c66
        links:
          type: object
          properties:
            self:
              type: string
            buyers:
              type: string
            sellers:
              type: string
            status:
              type: string
            fees:
              type: string
            transactions:
              type: string
            batch_transactions:
              type: string
            wire_details:
              type: string
            bpay_details:
              type: string
            tds_checks:
              type: string
    single_charge_status:
      type: object
      properties:
        charges:
          $ref: '#/components/schemas/charge_status'
    charge_status:
      type: object
      properties:
        id:
          type: string
          example: cb7eafc1-571c-425c-9adc-f56cb585cd68
        state:
          type: string
          example: completed
        status:
          type: integer
          example: 22500
    single_charge:
      type: object
      properties:
        charges:
          $ref: '#/components/schemas/charge'
    charges:
      type: object
      properties:
        charges:
          type: array
          items:
            $ref: '#/components/schemas/charge'
    charge:
      type: object
      properties:
        id:
          type: string
          example: cb7eafc1-571c-425c-9adc-f56cb585cd68
        name:
          type: string
          example: Charge for Delivery
        custom_descriptor:
          type: string
        custom_data:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        state:
          type: string
          example: completed
        buyer_fees:
          type: integer
          example: 0
        seller_fees:
          type: integer
          example: 400
        credit_card_fee:
          type: integer
          example: 0
        status:
          type: integer
          example: 22500
        amount:
          type: integer
          example: 20000
        dynamic_descriptor:
          type: string
          example: ASM*Samuel Seller
        account_id:
          type: string
          format: uuid
          example: b49d943f-add0-4d1c-b357-0f1a8fde677c
        account_type:
          type: string
          example: credit card
        promisepay_fee:
          type: integer
          example: 187
        currency:
          type: string
          example: AUD
        payment_method:
          type: string
          example: charge
        buyer_name:
          type: string
          example: Anonymous Buyer
        buyer_email:
          type: string
          format: email
          example: anonymous+buyer+1@assemblypayments.com
        buyer_zip:
          type: string
          example: "3000"
        buyer_country:
          type: string
          example: AUS
        seller_name:
          type: string
          example: Anonymous Seller
        seller_email:
          type: string
          format: email
          example: anonymous+seller+1@assemblypayments.com
        seller_zip:
          type: string
          example: "3000"
        seller_country:
          type: string
          example: AUS
        related:
          type: object
          properties:
            buyers:
              type: string
              example: 064d6800-fff3-11e5-86aa-5e5517507c66
            sellers:
              type: string
              example: 5830def0-ffe8-11e5-86aa-5e5517507c66
        links:
          type: object
          properties:
            self:
              type: string
              example: /charges?limit=2&offset
            buyers:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/buyers
            sellers:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/sellers
            status:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/status
            fees:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/fees
            transactions:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/transactions
            batch_transactions:
              type: string
              example: /charges/cb7eafc1-571c-425c-9adc-f56cb585cd68/batch_transactions
    single_batch_transaction:
      properties:
        batch_transactions:
          $ref: '#/components/schemas/batch_transaction'
    list_batch_transactions:
      properties:
        batch_transactions:
          type: array
          items:
            $ref: '#/components/schemas/batch_transaction'
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
        links:
          type: object
          properties:
            self:
              type: string
    batch_transaction:
      required:
      - amount
      - created_at
      - id
      - updated_at
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          example: "12200"
        uuid:
          type: string
        disbursement_bank:
          type: string
          example: Bank A
        processing_bank:
          type: string
          example: Bank A
        external_reference:
          type: string
        reference_amount:
          type: string
        internal_state:
          type: string
        internal_status:
          type: string
        account_external:
          type: object
          properties:
            account_type_id:
              type: string
              example: "9100"
            currency:
              type: object
              properties:
                code:
                  type: string
                  example: AUD
        external_account_details:
          type: string
        external_account_details_encrypted:
          type: boolean
        marketplace:
          type: object
          properties:
            group_name:
              type: string
            name:
              type: string
            short_name:
              type: string
            uuid:
              type: string
              format: uuid
            account_details:
              type: string
            account_details_encrypted:
              type: boolean
        first_name:
          type: string
          example: first name
        last_name:
          type: string
          example: last name
        user_email:
          type: string
          example: email@email.com
        user_external_id:
          type: string
          example: buyer-71391895
        legal_entity_id:
          type: string
          example: 49fac28b-5628-4cec-854f-58a9b87dd58d
        phone:
          type: string
          example: "1588681395"
        payout_currency:
          type: string
        type:
          type: string
          example: disbursement
        type_method:
          type: string
          example: direct_credit
        batch_id:
          type: integer
          example: 302
        cuscal_payment_transaction_id:
          type: string
        reference:
          type: string
        state:
          type: string
          example: batched
        user_id:
          type: string
          example: 064d6800-fff3-11e5-86aa-5e5517507c66
        account_id:
          type: string
          example: e57120ea-053d-11e6-b512-3e1d05defe78
        account_type:
          type: string
          example: item
        from_user_name:
          type: string
          example: payer
        from_user_id:
          type: string
          example: 064d6800-fff3-11e5-86aa-5e5517507c66
        refund_state:
          type: string
        amount:
          type: integer
          example: 9800
        currency:
          type: string
          example: AUD
        company:
          type: string
          example: ABC Pty Ltd
        address_line1:
          type: string
          example: Courtland Ave.
        address_line2:
          type: string
          example: Building 1
        address_city:
          type: string
          example: Melbourne
        address_state:
          type: string
          example: VIC
        address_postcode:
          type: string
          example: "3000"
        address_country:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            three_code:
              type: string
            two_code:
              type: string
            currency_id:
              type: string
            numeric_code:
              type: string
        country:
          type: string
          example: AUD
        debit_credit:
          type: string
          example: credit
        description:
          type: string
          example: Credit of $98.00 to Item by Debit of $98.00 from Wallet Account
        item:
          type: object
          properties:
            id:
              type: string
            item_number:
              type: string
        deposit_reference:
          type: string
          example: AUD
        related:
          type: object
          properties:
            account_to:
              type: object
              properties:
                id:
                  type: string
                  example: 385b50bb-237a-42cb-9382-22953e191ae6
                account_type:
                  type: string
                  example: wallet_account
                user_id:
                  type: string
                  example: 5830def0-ffe8-11e5-86aa-5e5517507c66
        links:
          type: object
          properties:
            self:
              type: string
            users:
              type: string
            fees:
              type: string
            wallet_accounts:
              type: string
            card_accounts:
              type: string
            paypal_accounts:
              type: string
            bank_accounts:
              type: string
            items:
              type: string
            marketplace:
              type: string
    single_callback:
      properties:
        callbacks:
          $ref: '#/components/schemas/callback'
    callback_deletion:
      properties:
        callbacks:
          type: string
          example: Successfully redacted
    callbacks:
      properties:
        callbacks:
          type: array
          items:
            $ref: '#/components/schemas/callback'
    callback:
      type: object
      properties:
        id:
          type: string
          example: f92d4ca1-4ee5-43f3-9e34-ca5f759c5e76
        description:
          type: string
          example: Users Callback
        url:
          type: string
          example: https://httpbin.org/post
        object_type:
          type: string
          example: users
          enum:
            - transactions
            - items
            - users
            - batch_transactions
            - disbursements
            - accounts
        enabled:
          type: boolean
          example: true
        authorization_token:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        marketplace_id:
          type: string
          format: uuid
        links:
          type: object
          properties:
            self:
              type: string
            responses:
              type: string
    single_callback_response:
      properties:
        call_responses:
          $ref: '#/components/schemas/callback_response'
    list_callback_responses:
      properties:
        callback_responses:
          type: array
          items:
            $ref: '#/components/schemas/callback_response'
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
        links:
          type: object
          properties:
            self:
              type: string
            callbacks:
              type: string
    callback_response:
      type: object
      properties:
        id:
          type: string
          example: 4476b384-fa48-4473-98ec-8fcdda4a1e84
        url:
          type: string
          example: https://httpbin.org/post
        created_at:
          type: string
          format: date-time
        payload:
          type: object
          properties:
            message:
              type: string
              example: Assembly callback test
        response:
          type: object
          properties:
            error:
              type: string
              example: OK
        response_code:
          type: integer
          example: 200
    simple_company:
      type: object
      properties:
        id:
          type: string
          example: 9280aa36-d7f8-4959-b1ed-0ace2c12cfa2
        name:
          type: string
          example: Assembly Payments
        legal_name:
          type: string
          example: PromisePay
    simple_companies:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/simple_company'
    single_company:
      properties:
        companies:
          $ref: '#/components/schemas/company'
    company:
      type: object
      properties:
        legal_name:
          type: string
          example: Samuel's Gardening Pty Ltd
        name:
          type: string
          example: Samuel's Gardening
        tax_number:
          type: string
          example: "100200300"
        charge_tax:
          type: boolean
          nullable: true
          example: false
        phone:
          type: string
          example: "61400000000"
        id:
          type: string
          example: 7b85aa9c-fc54-4449-afef-f52fc2b94cd3
        related:
          type: object
          properties:
            address:
              type: string
              example: cae0ada1-8e31-4bfc-aa24-5331f888cb12
            users:
              type: string
              example: b278dbd0-48da-4824-8ab7-f82008682df2
        self:
          type: object
          properties:
            self:
              type: string
              example: /companies
    single_direct_debit_authority:
      properties:
        direct_debit_authorities:
          $ref: '#/components/schemas/direct_debit_authority'
    list_direct_debit_authorities:
      properties:
        direct_debit_authorities:
          type: array
          items:
            $ref: '#/components/schemas/direct_debit_authority'
    direct_debit_authority:
      type: object
      properties:
        id:
          type: string
          example: 8f233e04-ffaa-4c9d-adf9-244853848e21
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        amount:
          type: string
          example: "100000"
        bank_bsb:
          type: string
          example: "83001"
        debit_user_id:
          type: string
          example: "481561"
        state:
          type: string
          example: approved
        related:
          type: object
          properties:
            bank_accounts:
              type: string
              example: 9fda18e7-b1d3-4a83-830d-0cef0f62cd25
        links:
          type: object
          properties:
            self:
              type: string
              example: /direct_debit_authorities/9fda18e7-b1d3-4a83-830d-0cef0f62cd25
    single_fee:
      properties:
        fees:
          $ref: '#/components/schemas/fee'
    fees:
      properties:
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee'
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
        links:
          type: object
          properties:
            self:
              type: string
    fee:
      type: object
      properties:
        id:
          type: string
          example: 36020976-f345-4d0f-b860-9c025ccce668
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: Seller Success Fee
        fee_type_id:
          type: string
          example: "2"
        amount:
          type: string
          example: "200"
        cap:
          type: string
        min:
          type: string
        max:
          type: string
        to:
          type: string
          example: seller
        calculated_fee:
          type: integer
          description: This field is only shown in case an item amount is passed
          readOnly: true
          example: 400
        links:
          type: object
          properties:
            self:
              type: string
    single_transaction:
      type: object
      properties:
        transactions:
          $ref: '#/components/schemas/transaction'
    transactions:
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/transaction'
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
        links:
          type: object
          properties:
            self:
              type: string
    transaction:
      type: object
      properties:
        id:
          type: string
          example: 7a138862-f821-412d-a91e-367ed7391fe7
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          example: Debit of $250.00 from Credit Card for Credit of $250.00 to Item
        payee_name:
          type: string
          example: Test payee
        type:
          type: string
          example: payment
        type_method:
          type: string
          example: credit_card
        state:
          type: string
          example: successful
        user_id:
          type: string
          example: 064d6800-fff3-11e5-86aa-5e5517507c66
        user_name:
          type: string
          example: First1556505750 LastName
        item_name:
          type: string
          example: Item 7190985-1-9382
        dynamic_descriptor:
          type: string
          example: "100014012533407"
        account_id:
          type: string
          example: 930a7f78-6bf6-4f33-8cfc-b82c787b5f83
        account_type:
          type: string
          example: card_account
        amount:
          type: string
          example: "25000"
        currency:
          type: string
          example: AUD
        debit_credit:
          type: string
          example: debit
        marketplace:
          type: object
          properties:
            group_name:
              type: string
            name:
              type: string
            short_name:
              type: string
            uuid:
              type: string
              format: uuid
        related:
          type: object
          properties:
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: 6b68f5dc-b8a8-44cf-a7e8-80f350178152
                  account_id:
                    type: string
                    example: 100fd4a0-0538-11e6-b512-3e1d05defe78
                  account_type:
                    type: string
                    example: item
                  user_id:
                    type: string
                    example: 064d6800-fff3-11e5-86aa-5e5517507c66
                  user_name:
                    type: string
                  item_name:
                    type: string
        payee_details:
          type: object
          properties:
            debtor_name:
              type: string
              example: Test debtor name
            debtor_legal_name:
              type: string
              example: Test debtor legal name
            debtor_bsb:
              type: string
              example: "123456"
            debtor_account:
              type: string
              example: "123456789"
            clearing_system_transaction_id:
              type: string
              example: INGBAU2SXXXN20181213009149405094650
            remittance_information:
              type: string
              example: "100014013068940"
            pay_id:
              type: string
              example: npp@assemblypayments.com
            pay_id_type:
              type: string
              example: /EMAL
            end_to_end_id:
              type: string
              example: NOTPROVIDED
            npp_payin_internal_id:
              type: string
              example: 3a768370-8ebd-11ea-a8ab-af8225e7132d
          description: payee details. only filled for specific payment types (fast payments - npp)
        links:
          type: object
          properties:
            self:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b
            users:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/users
            fees:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/fees
            wallet_accounts:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/wallet_accounts
            card_accounts:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/card_accounts
            paypal_accounts:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/paypal_accounts
            bank_accounts:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/bank_accounts
            items:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/items
            marketplaces:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/marketplaces
            npp_payin_transaction_detail:
              type: string
            supplementary_data:
              type: string
              example: /transactions/ea36e48a-4638-4d1a-a345-e1a0a584df8b/supplementary_data
    disbursements:
      type: object
      properties:
        disbursements:
          type: array
          items:
            $ref: '#/components/schemas/disbursement'
        meta:
          type: object
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
    single_disbursement:
      type: object
      properties:
        disbursements:
          $ref: '#/components/schemas/disbursement'
    disbursement:
      type: object
      properties:
        id:
          type: string
          example: ad688d54-6791-4f1d-add7-88fbd89b70d1
        amount:
          type: integer
          example: 10000
        currency:
          type: string
          example: AUD
        batch_id:
          type: string
        cuscal_payment_transaction_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        state:
          type: string
          example: pending
        to:
          type: string
          example: Bank Account
        bank_name:
          type: string
          example: Bank of Australia
        bank_account_name:
          type: string
          example: Samuel Seller
        bank_account_number:
          type: string
          example: XXX234
        bank_routing_number:
          type: string
          example: XXXXX3
        npp_payout_state:
          type: string
          example: trying
        account_name:
          type: string
          example: My Water Company
        biller_name:
          type: string
          example: ABC Water
        biller_code:
          type: string
          example: "123456"
        crn:
          type: string
          example: "987654321"
        links:
          type: object
          properties:
            transactions:
              type: string
              example: /disbursements/8a31ebfa-421b-4cbb-9241-632f71b3778a/transactions
            wallet_accounts:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/wallet_accounts
            paypal_accounts:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/paypal_accounts
            bank_accounts:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/bank_accounts
            bpay_accounts:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/bpay_accounts
            items:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/items
            users:
              type: string
              example: /disbursements/ea36e48a-4638-4d1a-a345-e1a0a584df8b/users
    wire_details:
      properties:
        beneficiary:
          type: string
          example: Assembly Payments
        address_line1:
          type: string
          example: 500 Bourke Street
        city:
          type: string
          example: Melbourne
        state:
          type: string
          example: VIC
        zip:
          type: string
          example: "3000"
        routing_number:
          type: string
          example: "83001"
        account_number:
          type: string
          example: "844144573"
        bank_name:
          type: string
          example: National Australia Bank
        swift:
          type: string
          example: NATAAU3303M
        reference:
          type: string
          example: "100014013961629"
        amount:
          type: string
          example: $250.00
        currency:
          type: string
          example: AUD
        country:
          type: string
          example: Australia
    wire_details_with_id:
      properties:
        id:
          type: string
          example: 100fd4a0-0538-11e6-b512-3e1d05defe78
        wire_details:
          $ref: '#/components/schemas/wire_details'
    single_wire_details_with_id:
      properties:
        items:
          $ref: '#/components/schemas/wire_details_with_id'
    single_status:
      properties:
        items:
          $ref: '#/components/schemas/status'
    status:
      properties:
        id:
          type: string
          example: 100fd4a0-0538-11e6-b512-3e1d05defe78
        status:
          type: string
          example: "22000"
        state:
          type: string
          example: pending
    single_bpay_details_with_id:
      properties:
        items:
          $ref: '#/components/schemas/bpay_details_with_id'
    bpay_details_with_id:
      properties:
        id:
          type: string
          example: 100fd4a0-0538-11e6-b512-3e1d05defe78
        bpay_details:
          $ref: '#/components/schemas/bpay_details'
    bpay_details:
      properties:
        biller_code:
          type: string
          example: "230680"
        amount:
          type: string
          example: $250.00
        currency:
          type: string
          example: AUD
        reference:
          type: string
          example: "100014013961629"
    error:
      type: object
      properties:
        error:
          type: string
    tokens_request_body:
      required:
      - client_id
      - client_secret
      - grant_type
      - scope
      type: object
      properties:
        grant_type:
          type: string
          description: This is a constant value of `client_credentials`
          example: client_credentials
          default: client_credentials
        client_id:
          type: string
          description: This value is supplied to you by Assembly Payments.
          example: 10ajtntet1ccghuo8mv9ojglma
          default: 10ajtntet1ccghuo8mv9ojglma
        client_secret:
          type: string
          description: This value is supplied to you by Assembly Payments.
          example: hto00nsjk6osurndceon4rsn2irhi8s4lurau5f797d0smb94l6
          default: hto00nsjk6osurndceon4rsn2irhi8s4lurau5f797d0smb94l6
        scope:
          type: string
          description: This value is supplied to you by Assembly Payments.
          example: im-au-04/cdbf9590-1db6-0139-ac4d-0a58a9feac03
          default: im-au-04/cdbf9590-1db6-0139-ac4d-0a58a9feac03
    tokens_response:
      type: object
      properties:
        access_token:
          type: string
          description: JWT issued by AWS Cognito.
          example: ey...J9.ey...n0.Iu...7g
        expires_in:
          type: number
          description: Lifetime of access token in seconds.
          example: 3600
        token_type:
          type: string
          description: Authorization header value prefix. This is a constant.
          example: Bearer
    bank_account_requestBody:
      required:
      - account_name
      - account_number
      - account_type
      - bank_name
      - country
      - holder_type
      - routing_number
      - user_id
      type: object
      properties:
        user_id:
          type: string
          description: User ID
          example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          default: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
        bank_name:
          type: string
          description: Bank name
          example: Bank of Australia
          default: Bank of Australia
        account_name:
          type: string
          description: Account name
          example: Samuel Seller
          default: Samuel Seller
        routing_number:
          type: string
          description: |
            *Required conditionally* - Routing number / SWIFT code / BSB number. See [Bank account formats by country](https://developer.assemblypayments.com/docs/input-formats).
          example: "111123"
          default: "111123"
        account_number:
          type: string
          description: |
            Account number / IBAN. See [Bank account formats by country](https://developer.assemblypayments.com/docs/input-formats).
          example: "111234"
          default: "111234"
        account_type:
          type: string
          description: Bank account type (savings or checking)
          example: checking
          default: checking
          enum:
          - savings
          - checking
        holder_type:
          type: string
          description: Holder type (personal or business)
          example: personal
          default: personal
          enum:
          - personal
          - business
        country:
          maxLength: 3
          type: string
          description: '[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements) country code (3 char)'
          example: AUS
          default: AUS
        payout_currency:
          type: string
          description: '[ISO 4217 alpha-3](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) currency code. This parameter determines the currency with which funds are paid out.'
          example: AUD
        currency:
          type: string
          description: '[ISO 4217 alpha-3](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.'
          example: AUD
    penny_verify_requestBody:
      required:
      - amount_1
      - amount_2
      type: object
      properties:
        amount_1:
          type: integer
          description: First penny amount in cents. Can range from 1 to 30 cents.
          default: 10
        amount_2:
          type: integer
          description: Second penny amount in cents. Can range from 1 to 30 cents.
          default: 20
    bpay_account_requestBody:
      required:
      - account_name
      - biller_code
      - bpay_crn
      - user_id
      type: object
      properties:
        user_id:
          type: string
          description: User ID
          example: 725cc8c0-759b-0138-5d6d-0a58a9feac05
          default: 725cc8c0-759b-0138-5d6d-0a58a9feac05
        account_name:
          type: string
          description: Name assigned by the platform/marketplace to identify the account (similar to a nickname)
          example: My Water Bill Company
          default: My Water Bill Company
        biller_code:
          type: integer
          description: The Biller Code for the biller that will receive the payment. The Biller Code must be a numeric value with 3 to 10 digits.
          example: 123456
        bpay_crn:
          type: string
          description: Customer reference number (crn) to be used for this bpay account. The CRN must contain between 2 and 20 digits.
          example: "987654321"
          default: "987654321"
    bill_payment_requestBody:
      required:
      - account_id
      - amount
      type: object
      properties:
        account_id:
          type: string
          description: BPay Account to withdraw to. This needs to be a bpay_account id
          example: c1824ad0-73f1-0138-3700-0a58a9feac09
          default: c1824ad0-73f1-0138-3700-0a58a9feac09
        amount:
          type: integer
          description: Amount (in cents) to withdraw.
          example: 173
    callback_requestBody:
      required:
      - description
      - enabled
      - object_type
      - url
      type: object
      properties:
        description:
          type: string
          description: Description to identify the callback
          example: Users Callback
          default: Users Callback
        url:
          type: string
          description: URL to which the callbacks will notify
          example: https://httpbin.org
          default: https://httpbin.org
        object_type:
          type: string
          description: Object or entity to which the callbacks refer. Please refer to [Callbacks](https://developer.assemblypayments.com/docs/callbacks) for a list of object types.
          example: users
          default: users
        enabled:
          type: string
          description: Toggle whether callback is active or inactive.
          example: "true"
          default: "true"
    card_account_requestBody:
      required:
      - cvv
      - expiry_month
      - expiry_year
      - full_name
      - number
      - user_id
      type: object
      properties:
        full_name:
          type: string
          description: User full name with at least a space
          example: John Doe
          default: John Doe
        number:
          type: string
          description: Account number
          example: "4444111122223333"
          default: "4444111122223333"
        expiry_month:
          maxLength: 2
          type: integer
          description: Expiry month (MM)
          example: 1
        expiry_year:
          maxLength: 4
          type: integer
          description: Expiry year (YYYY)
          example: 2025
        cvv:
          type: string
          description: CVV / CVC
          example: "123"
          default: "123"
        user_id:
          type: string
          description: User ID
          example: 83f54680-9600-4bee-a6d1-84a5d0e10059
          default: 83f54680-9600-4bee-a6d1-84a5d0e10059
    card_account_verify_requestBody:
      type: object
      properties:
        cvv:
          type: string
          description: CVV / CVC
          example: "123"
    company_requestBody:
      required:
      - country
      - legal_name
      - name
      - tax_number
      - user_id
      type: object
      properties:
        name:
          type: string
          description: Company name
          example: ABC
          default: ABC
        legal_name:
          type: string
          description: Company legal name
          example: ABC Pty Ltd
          default: ABC Pty Ltd
        tax_number:
          type: string
          description: ABN / Tax number
          example: "123456789"
          default: "123456789"
        charge_tax:
          type: boolean
          description: Charge GST or not? allowed values are true or false
          nullable: true
          example: false
        address_line1:
          type: string
          description: Address line 1
          example: Collins
        address_line2:
          type: string
          description: Address line 2
          example: ""
        city:
          type: string
          description: City
          example: Melbourne
        state:
          type: string
          description: State
          example: VIC
        zip:
          type: string
          description: Zip
          example: "3000"
        country:
          type: string
          description: 3 digit country code (eg. AUS)
          example: AUS
          default: AUS
        phone:
          type: string
          description: Company phone number
          example: ""
          default: ""
        user_id:
          type: string
          description: User ID to associate with the company
          example: buyer-70729325
          default: buyer-70729325
    direct_debit_authority_requestBody:
      required:
      - account_id
      - amount
      type: object
      properties:
        account_id:
          type: string
          description: Bank account ID
          example: 7fac6c60-6f5b-0138-eb9a-0a58a9feac03
          default: 7fac6c60-6f5b-0138-eb9a-0a58a9feac03
        amount:
          type: integer
          description: Amount for direct debit in cents
          example: 100
          default: 100
    fee_requestBody:
      required:
      - amount
      - fee_type_id
      - name
      type: object
      properties:
        name:
          type: string
          description: Name
          example: Seller Success Fee
          default: Seller Success Fee
        fee_type_id:
          type: string
          description: |
            Fee type:
              1. Fixed
              2. Percentage
              3. Percentage with Cap
              4. Percentage with Min
          example: "2"
          default: "2"
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
        amount:
          type: integer
          description: Amount in cents; if the fee type is percentage, then this shows the percentage in hundredths (For example, an amount of 5 refers to 0.05% in fees.)
          example: 200
          default: 200
        cap:
          type: string
          description: Cap the Fee
          example: ""
        min:
          type: integer
          description: Minimum Fee
        max:
          type: integer
          description: Maximum Fee
        to:
          type: string
          description: Who pays the Fee. Allowed values are (buyer or seller). If this field has a value of buyer, then the buyer will have to pay the fee on top of the actual payment (example for an item of 100 and a fee of 2, then the buyer would have to pay 102) If this field has a value of seller, then the seller will end up receiving the amount - the fee (example for an item of 100 and a fee of 2, then the seller would end up receiving 98)
          example: seller
          enum:
          - buyer
          - seller
          - cc
          - int_wire
    charge_requestBody:
      required:
      - account_id
      - amount
      - country
      - email
      - zip
      type: object
      properties:
        account_id:
          type: string
          description: Bank Account or Card Account ID
          example: 5ef44050-4c56-0137-abdf-0242ac110002
          default: 5ef44050-4c56-0137-abdf-0242ac110002
        name:
          type: string
          description: Description of the Charge being created.
          example: Test Charge 001
        amount:
          type: integer
          description: The cost being charged in cents.
          example: 1000
        email:
          type: string
          description: Email of the user associated with the account being charged.
          example: buyer-1556505753@promisepay.com
          default: buyer-1556505753@promisepay.com
        zip:
          type: integer
          description: Postcode
          example: 3000
        country:
          type: string
          description: '[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements) country code of the User being charged.'
          example: AUS
          default: AUS
        user_id:
          type: string
          description: The ID of the User
          example: buyer-1556505753
        fee_ids:
          type: string
          description: A comma separated list of fee IDs to apply
          example: ""
        currency:
          type: string
          description: '[ISO 4217 alpha-3](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.'
          example: AUD
        retain_account:
          type: boolean
          description: |
            True - Enables the account to be charged in the future. False - Redacts the account after this charge.
          example: false
        device_id:
          type: string
          description: Device Information for the device initiating the payment
          example: ""
        ip_address:
          type: string
          description: IP Information for the device initiating the payment
          example: ""
        custom_descriptor:
          type: string
          description: When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.
          example: ""
        cvv:
          type: string
          description: CVV / CVC
          example: ""
    token_auth_requestBody:
      required:
      - token_type
      - user_id
      type: object
      properties:
        token_type:
          type: string
          description: Token type ID. use `bank` or `card`
          example: bank
          default: bank
          enum:
          - bank
          - card
        user_id:
          type: string
          description: Buyer or Seller ID (already created)
          example: seller-68611249
          default: seller-68611249
    update_user_requestBody:
      required:
      - first_name
      type: object
      properties:
        first_name:
          type: string
          description: First name of the user
          example: Neol1556506027
          default: Neol1556506027
        last_name:
          type: string
          description: Last name of the user
          example: Calangi
        email:
          type: string
          description: Email of the user. Unique to platform.
          example: neol.calangi+buyer1556506027@promisepay.com
        mobile:
          type: string
          description: International number format. Include ’+’ and no spaces.
          example: +21556506027
        address_line1:
          type: string
          description: First line of the user address
          example: ""
        address_line2:
          type: string
          description: Second line of the user address
          example: ""
        state:
          type: string
          description: State section of the user address
          example: ""
        city:
          type: string
          description: City section of the user address
          example: ""
        zip:
          type: string
          description: Postcode
          example: ""
        country:
          type: string
          description: '[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements) country code (3 char)'
          example: AUS
        dob:
          type: string
          description: Date of Birth (DD/MM/YYYY).
        government_number:
          type: string
          description: Generic parameter to capture important user verification data. eg. SSN for US users, TFN for AU users.
          example: ""
        drivers_license_number:
          type: string
          description: Driving license number of the user
          example: ""
        drivers_license_state:
          type: string
          description: State section of the user's driving license
          example: ""
        ip_address:
          type: string
          description: IP address
          example: ""
        logo_url:
          type: string
          description: URL link to the logo
          example: ""
        color_1:
          type: string
          description: Color code number 1
          example: ""
        color_2:
          type: string
          description: Color code number 2
          example: ""
        custom_descriptor:
          type: string
          description: When custom_descriptors are enabled, this is the information to appear on bundle direct debit statements (which show the buyer's custom_descriptor) as well as international wire payout, direct credit and PayPal payout statements (which show the seller's custom_descriptor)
          example: ""
    bank_account_id_requestBody:
      required:
      - account_id
      type: object
      properties:
        account_id:
          type: string
          description: Account ID (Bank account)
          example: 901d8cd0-6af3-0138-967d-0a58a9feac04
          default: 901d8cd0-6af3-0138-967d-0a58a9feac04
    user_requestBody:
      required:
      - country
      - email
      - first_name
      - id
      - last_name
      type: object
      properties:
        id:
          type: string
          description: Unique ID that can be generated by the platform. Cannot contain ’.’  character. Contact Assembly support if you want user IDs to be generated automatically.
          example: buyer-1556506027
          default: buyer-1556506027
        first_name:
          type: string
          description: First name of the user
          example: Neol1556506027
          default: Neol1556506027
        last_name:
          type: string
          description: Last name of the user
          example: Calangi
          default: Calangi
        email:
          type: string
          description: Email of the user. Unique to platform.
          example: neol.calangi+buyer1556506027@promisepay.com
          default: neol.calangi+buyer1556506027@promisepay.com
        mobile:
          type: string
          description: International number format. Include ’+’ and no spaces.
          example: +21556506027
        address_line1:
          type: string
          description: First line of the user address
          example: ""
        address_line2:
          type: string
          description: Second line of the user address
          example: ""
        state:
          type: string
          description: State section of the user address
          example: ""
        city:
          type: string
          description: City section of the user address
          example: ""
        zip:
          type: string
          description: Postcode
          example: ""
        country:
          type: string
          description: '[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements) country code (3 char)'
          example: AUS
          default: AUS
        dob:
          type: string
          description: Date of Birth (DD/MM/YYYY).
        government_number:
          type: string
          description: Generic parameter to capture important user verification data. eg. SSN for US users, TFN for AU users.
          example: ""
        drivers_license_number:
          type: string
          description: Driving license number of the user
          example: ""
        drivers_license_state:
          type: string
          description: State section of the user's driving license
          example: ""
        ip_address:
          type: string
          description: IP address
          example: ""
        logo_url:
          type: string
          description: URL link to the logo
          example: ""
        color_1:
          type: string
          description: Color code number 1
          example: ""
        color_2:
          type: string
          description: Color code number 2
          example: ""
        custom_descriptor:
          type: string
          description: When custom_descriptors are enabled, this is the information to appear on bundle direct debit statements (which show the buyer's custom_descriptor) as well as international wire payout, direct credit and PayPal payout statements (which show the seller's custom_descriptor)
          example: ""
    withdraw_requestBody:
      required:
      - account_id
      - amount
      type: object
      properties:
        account_id:
          type: string
          description: Account to withdraw to.
          example: c1824ad0-73f1-0138-3700-0a58a9feac09
          default: c1824ad0-73f1-0138-3700-0a58a9feac09
        amount:
          type: integer
          description: Amount (in cents) to withdraw.
          example: 173
        custom_descriptor:
          type: string
          description: A descriptor specified by the customer to be passed on the withdraw call. This requires that custom_descriptors are enabled. In the case of fast payments (AU / NPP) Assembly will append a value in the beginning of descriptor, the customer can use 200 characters (excluding URL, javascript/code, emojis). In the case of DE batch payments will allow 18 characters
          example: ""
    deposit_requestBody:
      required:
      - account_id
      - amount
      type: object
      properties:
        account_id:
          type: string
          description: Account to deposit from.
          example: c1824ad0-73f1-0138-3700-0a58a9feac09
          default: c1824ad0-73f1-0138-3700-0a58a9feac09
        amount:
          type: integer
          description: Amount (in cents) to deposit.
          example: 100
    item_requestBody:
      required:
      - amount
      - buyer_id
      - id
      - name
      - payment_type
      - seller_id
      type: object
      properties:
        id:
          type: string
          description: Unique ID that can be generated by the platform. Cannot contain ’.’ character. Contact Assembly support if you want item IDs to be generated automatically.
          example: 7190770-1-2908
          default: 7190770-1-2908
        name:
          type: string
          description: A name for the item
          example: Item 7190770-1-2908
          default: Item 7190770-1-2908
        amount:
          type: integer
          description: The cost in cents
          example: 102
        currency:
          type: string
          description: '[ISO 4217 alpha-3](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.'
          example: AUD
        payment_type:
          type: integer
          description: 'Payment type: 2. Express'
          example: 2
        buyer_id:
          type: string
          description: Marketplace / Pltform buyer ID
          example: buyer-719013950014
          default: buyer-719013950014
        seller_id:
          type: string
          description: Marketplace / Platform Seller ID
          example: seller-71718579
          default: seller-71718579
        fee_ids:
          type: string
          description: A comma separated list of fee IDs to apply
          example: ""
        description:
          type: string
          description: A description of the item
          example: Test Item 7190770-1-2908
        buyer_url:
          type: string
          description: Link for the buyer CTA (Call To Action)
          example: ""
        seller_url:
          type: string
          description: Link for the seller CTA (Call To Action)
          example: ""
        tax_invoice:
          type: boolean
          description: Toggle to generate tax invoice once Item is complete
          example: false
        custom_descriptor:
          type: string
          description: When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.
          example: ""
    update_item_requestBody:
      type: object
      properties:
        amount:
          type: integer
          description: The cost in cents
          example: 102
        name:
          type: string
          description: A name for the item
          example: Item 7190770-1-2908
        buyer_id:
          type: string
          description: Marketplace / Pltform buyer ID
          example: buyer-719013950014
        seller_id:
          type: string
          description: Marketplace / Platform Seller ID
          example: seller-71718579
        description:
          type: string
          description: A description of the item
          example: Test Item 7190770-1-2908
        custom_descriptor:
          type: string
          description: When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.
          example: ""
        fee_ids:
          description: A comma separated list of fee IDs to apply
          type: string
          example: ''
    account_id_requestBody:
      required:
      - account_id
      type: object
      properties:
        account_id:
          type: string
          description: Account id of the bank account/credit card, etc making payment (not user id)
          example: 725cc8c0-759b-0138-5d6d-0a58a9feac05
          default: 725cc8c0-759b-0138-5d6d-0a58a9feac05
        device_id:
          type: string
          description: Device Information for the device initiating the payment. This will need to be provided for card payments.
          example: ""
        ip_address:
          type: string
          description: IP Information for the device initiating the payment. This will need to be provided for card payments.
          example: ""
        cvv:
          type: string
          description: CVV / CVC
          example: ""
    refund_requestBody:
      type: object
      properties:
        refund_amount:
          type: integer
          description: For partial refunds, if they are enabled for marketplace.
        refund_message:
          type: string
          description: Reason for the request.
          example: ""
        account_id:
          type: string
          description: The account id to be used to get the refunds from. This will need to be an account that has already been set up within Assembly
          example: ""
    card_account_id_requestBody:
      required:
      - account_id
      type: object
      properties:
        account_id:
          type: string
          description: Card account ID
          example: 725cc8c0-759b-0138-5d6d-0a58a9feac05
          default: 725cc8c0-759b-0138-5d6d-0a58a9feac05
        cvv:
          type: string
          description: CVV / CVC
          example: ""
    release_payment_requestBody:
      type: object
      properties:
        release_amount:
          type: integer
          description: Partial amount to be released in cents
        flag_release:
          type: boolean
          description: to be used if release flagging enabled for your marketplace
          example: false
  parameters:
    offsetParam:
      name: offset
      in: query
      description: Number of records to offset. Required for pagination.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        default: 0
    limitParam:
      name: limit
      in: query
      description: Number of records to retrieve. Up to 200.
      required: false
      style: form
      explode: true
      schema:
        maximum: 200
        minimum: 1
        type: integer
        default: 10
    transactionType:
      name: transaction_type
      in: query
      description: 'The type of transaction. Options for querying are: payment, refund, disbursement, fee, deposit, withdrawal. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - payment
        - refund
        - disbursement
        - fee
        - deposit
        - withdrawal
    transactionTypeMethod:
      name: transaction_type_method
      in: query
      description: 'The method the transaction was carried out with. Options for querying are: direct_debit, credit_card, npp, bpay, wire_transfer, wallet_account_transfer, direct_credit, misc. For returned values please refer here: [Enumeration Values](https://developer.assemblypayments.com/docs/enumeration-values) for the full list'
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - direct_debit
        - credit_card
        - npp
        - bpay
        - wallet_account_transfer
        - direct_credit
        - wire_transfer
        - misc
      example: ""
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    oAuth2ClientCredentials:
      type: oauth2
      description: Please refer to Authentication section within https://developer.assemblypayments.com/reference#authentication
      flows:
        clientCredentials:
          tokenUrl: https://au-0000.sandbox.auth.assemblypay.com/tokens
          scopes: {}
x-explorer-enabled: false
x-samples-languages:
- curl
- ruby
- php
- javascript
- csharp
- go
x-proxy-enabled: true
x-samples-enabled: true
